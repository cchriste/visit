package llnl.visit;


// ****************************************************************************
// Class: ColorAttribute
//
// Purpose:
//    This class contains RGBA color information
//
// Notes:      Autogenerated by xml2java.
//
// Programmer: xml2java
// Creation:   Thu May 27 11:01:44 PDT 2004
//
// Modifications:
//   
// ****************************************************************************

public class ColorAttribute extends AttributeSubject
{
    public ColorAttribute()
    {
        super(1);

        color = new byte[4];
        color[0] = 0;
        color[1] = 0;
        color[2] = 0;
        color[3] = 255;
    }

    public ColorAttribute(ColorAttribute obj)
    {
        super(1);

        int i;

        color = new byte[4];
        for(i = 0; i < obj.color.length; ++i)
            color[i] = obj.color[i];


        SelectAll();
    }

    public boolean equals(ColorAttribute obj)
    {
        int i;

        // Compare the color arrays.
        boolean color_equal = true;
        for(i = 0; i < 4 && color_equal; ++i)
            color_equal = (color[i] == obj.color[i]);

        // Create the return value
        return (color_equal);
    }

    // Property setting methods
    public void SetColor(byte[] color_)
    {
        color[0] = color_[0];
        color[1] = color_[1];
        color[2] = color_[2];
        color[3] = color_[3];
        Select(0);
    }

    public void SetColor(byte e0, byte e1, byte e2, byte e3)
    {
        color[0] = e0;
        color[1] = e1;
        color[2] = e2;
        color[3] = e3;
        Select(0);
    }

    // Property getting methods
    public byte[] GetColor() { return color; }

    // Write and read methods.
    public void WriteAtts(CommunicationBuffer buf)
    {
        if(WriteSelect(0, buf))
            buf.WriteByteArray(color, true);
    }

    public void ReadAtts(int n, CommunicationBuffer buf)
    {
        buf.ReadByte();
        SetColor(buf.ReadByteArray());
    }


    // Attributes
    private byte[] color;
}

