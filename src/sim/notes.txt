1.  Make sure any calls to dlsym/dlopen etc. go through portable code
    currently found in common/plugin.
2.  Right now, the environment still has to be set up manually.
3.  This includes things like the LD_LIBRARY_PATH.  Solutions:
  a)  There is some code in sim.C for setting up the LD_LIBRARY_PATH
      then re-exec'ing itself so the loader gets the new path.  It
      does not go through enough logic to get the right paths, though.
      This solution partly breaks profiling and debugging, however.
  b)  The engine wrapper could be linked against the full paths of the
      visit libraries.  This requires it to be built after visit has
      been publicly installed.
  c)  We can dlopen the dependent libraries, in reverse order, with the
      RTLD_GLOBAL flag or'ed in.
  d)  We could, of course, simply provide a script for users to run
      before ARES to set up their environment.
4.  This all needs to be tested for portability.
5.  Related to 3a, there is a RTLD_GLOBAL flag set in sim.C when loading
the engine wrapper library.  This is necessary on sunos (maybe elsewhere)
so that all the libraries the engine wrapper library was linked against
will be made available to plugins (and other libraries?) as they are
loaded.  After Silo could not find -lsocket, however, I simply fixed it
using RTLD_GLOBAL without seeing what else failed.  Maybe when we get
rid of all the database plugins in the simengine and Silo goes away, this
won't bite us anymore?  (It probably will, but I don't know for sure.)

