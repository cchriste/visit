##							-*- makefile -*-
## The following targets come from `include/targets'
##
install: install_lib install_bin

##
## Targets `install_lib' and `install_bin' are specified here with
## no dependencies and no commands so that they don't have to be
## defined in every Makefile.in.
##
install_lib:

install_bin:

##
## Same as `clean' and then remove Emacs backup files, .depend files,
## core dumps, Makefiles, and any files listed in DISTCLEAN_FILES.  Then
## go to the temporary include directory and remove those copies of the
## public header files.
##
## The Makefile line is separate from the *~, .depend and core line
## because some rm's won't get to Makefile if there are no backup files,
## .depend files, or core files.
##
## The DISTCLEAN_FILES variable is something that only exists in some
## Makefiles.  It is used to specify additional files that need to be
## removed when doing a distclean.  Since distclean is used to get rid of
## anything that can be automatically generated, the files that are in
## DISTCLEAN_FILES are things that are generated through *.in files by
## configure.
##
##  Jeremy Meredith (via Hank Childs), Thu May 17 08:42:21 PDT 2007
##  Remove .pardepend as well.
##
##  Jeremy Meredith, Tue Jun  5 17:29:41 EDT 2007
##  Remove $(DEP) instead of .pardepend, since I changed the way
##  dependencies for GNU systems are generated.
##
distclean: clean
	-$(RM) $(DISTCLEAN_FILES) *~ .depend $(DEP) core
	-$(RM) Makefile

##
## Suffixes
##
## Cyrus Harrison, Fri Mar  9 08:38:51 PST 2007
## Added engine specific targets: "_eng.o", "_par_eng.o"
## 
## Jeremy Meredith, Tue Jun  5 17:30:37 EDT 2007
## Added .d suffixes to match all the .o targets.
##
## Tom Fogal, Sun Jun  8 16:44:22 EDT 2008
## Added a couple rules for IceT objects.
##    "_icet.o": link with IceT
##    "_mesa_icet.o" link with IceT AND mesa.
## Reformatted to fit within 80 columns.

.SUFFIXES: .C _eng.o _mds.o _par.o _ogl.o _moc.C _mesa.o          \
           _par_eng.o _par_ogl.o _par_mesa.o _icet.o _mesa_icet.o \
           .d _eng.d _mds.d _par.d _ogl.d _mesa.d                 \
           _par_eng.d _par_ogl.d _par_mesa.d _icet.d _mesa_icet.d

##
## We separate C compiler flags from C preprocessor flags and most
## make's don't have the correct implicit rules, so we redefine them
## here.  If you don't like seeing the `ar' and `rm' commands when
## you run make, just add a `@' to the beginning of the line.
##
.c.a:
	false

##
## We separate C++ compiler flags from C preprocessor flags and most
## make's don't have the correct implicit rules, so we redefine them
## here.  If you don't like seeing the `ar' and `rm' commands when
## you run make, just add a `@' to the beginning of the line.
##
## Jeremy Meredith, Wed Jul  7 16:13:53 PDT 2004
## Removed the "_ser.o" build line because it was inefficient.
## Added a "_mds.o" build line to reduce the number of libraries
## needed by the mdserver by using preprocessor wrappers in plugins.
##
## Cyrus Harrison, Fri Mar  9 08:38:37 PST 2007
## Added engine specific targets: "_eng.o", "_par_eng.o"
## 
## Tom Fogal, Fri Jun  8 11:07:27 PDT 2007
## Use depcomp to build dependencies during compilation.
##
## Tom Fogal, Sun Jun  8 18:00:05 EDT 2008
## Added IceT specific targets.  Wrapped long lines.
##
## Tom Fogal, Wed Sep 17 17:11:21 MDT 2008
## Renamed temporary depend files so that it is not possible to have a conflict
## when one file is compiled in multiple modes.
##

.C.a:
	false

.c.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*.d'  tmpdepfile='./$*.tmp_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

.c_mds.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_mds.d'  tmpdepfile='./$*.tmp_mds_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CC) $(CFLAGS) $(CPPFLAGS) -DMDSERVER -c $< -o $@

.c_par.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_par.d'  tmpdepfile='./$*.tmp_par_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CC) $(CFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@ -c $< -o $@

# There cannot be a tab before the OS_RULE line.  The rule contains its own
# tab character.
.C.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*.d'  tmpdepfile='./$*.tmp_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@
@OS_RULE@

.C_eng.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_eng.d'  tmpdepfile='./$*.tmp_eng_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -DENGINE -c $< -o $@
@OS_RULE@

.C_mds.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_mds.d'  tmpdepfile='./$*.tmp_mds_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -DMDSERVER -c $< -o $@
@OS_RULE@

.C_par.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_par.d'  tmpdepfile='./$*.tmp_par_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@ -c $< -o $@
@OS_RULE@

.C_ogl.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_ogl.d'  tmpdepfile='./$*.tmp_ogl_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@
@OS_RULE@

.C_mesa.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_mesa.d'  tmpdepfile='./$*.tmp_mesa_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(MESA_INCLUDE) -c $< -o $@
@OS_RULE@

.C_par_eng.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_par_eng.d'  tmpdepfile='./$*.tmp_par_eng_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -DENGINE @PARALLEL_CPPFLAGS@ -c $< -o $@
@OS_RULE@

.C_par_ogl.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_par_ogl.d'  tmpdepfile='./$*.tmp_par_ogl_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@ -c $< -o $@
@OS_RULE@

.C_par_mesa.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_par_mesa.d'  tmpdepfile='./$*.tmp_par_mesa_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@ $(MESA_INCLUDE) \
	-c $< -o $@
@OS_RULE@

# _icet implies parallel; the PARALLEL_CPPFLAGS are there on purpose.
.C_icet.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_icet.d'  tmpdepfile='./$*.tmp_icet_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS)      \
	@PARALLEL_CPPFLAGS@ @ICET_CXXFLAGS@ \
	-c $< -o $@
@OS_RULE@

.C_mesa_icet.o:
	source='$<' object='$@' libtool=no        \
	depfile='./$*_mesa_icet.d'  tmpdepfile='./$*.tmp_mesa_icet_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) $(CXXFLAGS) $(CPPFLAGS)                      \
	@PARALLEL_CPPFLAGS@ @ICET_CXXFLAGS@ $(MESA_INCLUDE) \
	-c $< -o $@
@OS_RULE@

.f.o:
	$(F77) $(F77FLAGS) -c $<


##
## Implicit rule for Qt MOC source.
##
## Jeremy Meredith, Thu Jun  7 13:24:49 EDT 2007
## Added initial version.
##
.h_moc.C:
	@$(RM) $@
	@QT_MOC@ $< > $@


## Jeremy Meredith, Fri May 11 13:51:37 PDT 2001
## Create GUI, Viewer and Engine shared libraries.  This is for plugins.
## 
## Brad Whitlock, Tue Jul 24 9:42:23 PDT 2001
## Added a target for building scripting plugins.
##
## Jeremy Meredith, Fri Sep 28 13:23:59 PDT 2001
## Added IDSO.
##
## Hank Childs, Tue May 21 16:18:10 PDT 2002
## Put LDFLAGS in front of the obj files, since g++ won't get to them in time
## otherwise.
##
## Jeremy Meredith, Fri Jun 14 12:09:38 PDT 2002
## Added PY_LIB to the scripting plugins since it is a static library.
##
## Jeremy Meredith, Thu Jul 18 13:12:23 PDT 2002
## Removed PY_LIB.  It was causing some very strange problems.  Instead
## libpython2.1 will just be a .so instead of a .a, and distributed with
## the runtime libraries.
##
## Jeremy Meredith, Thu Aug 22 13:22:28 PDT 2002
## Added MDServer target.  Added libraries which can be forcibly linked
## against the shared library target.
##
## Brad Whitlock, Mon Apr 26 14:41:46 PST 2004
## I added a postprocessing step that in the default case evaluates to
## sleep 1. On MacOS X, the post processing step is used to update the
## address file used to determine the segment offset.
##
## Brad Whitlock, Fri Feb 23 17:31:25 PST 2007
## Added VIEWERMOCOBJ
##
## Cyrus Harrison, Fri Sep 19 14:20:32 PDT 2008
## Added custom libs for gui,engine,mdserver, and viewer libs.
##
## Jeremy Meredith, Tue Sep  8 15:11:35 EDT 2009
## Split custom engine libs into serial and parallel versions.
##
$(IDSO) noidso: $(IOBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(IOBJ) @SHLIB_ILIBS@
	@SHLIB_POSTPROCESS_ILIBS@

$(GDSO) nogdso: $(GOBJ) $(MOCOBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(GOBJ) $(MOCOBJ) $(SHLIB_FORCED) $(GUI_LIBS_FORCED) \
		@SHLIB_GLIBS@
	@SHLIB_POSTPROCESS_GLIBS@

$(MDSO) nomdso: $(MOBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(MOBJ) $(SHLIB_FORCED) $(MDSERVER_LIBS_FORCED) @SHLIB_MLIBS@
	@SHLIB_POSTPROCESS_MLIBS@

$(SDSO) nosdso: $(SOBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(CXXFLAGS) $(SOBJ) @SHLIB_SLIBS@
	@SHLIB_POSTPROCESS_SLIBS@

$(VDSO) novdso: $(VOBJ) $(VIEWERMOCOBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(VOBJ) $(VIEWERMOCOBJ) $(SHLIB_FORCED) $(VIEWER_LIBS_FORCED)  \
		@SHLIB_VLIBS@
	@SHLIB_POSTPROCESS_VLIBS@

$(ESERDSO) noedso_ser: $(ESEROBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(ESEROBJ) $(SHLIB_FORCED) $(ENGINE_SER_LIBS_FORCED) \
		@SHLIB_ESERLIBS@
	@SHLIB_POSTPROCESS_ESERLIBS@

$(EPARDSO) noedso_par: $(EPAROBJ)
	@SHLIB_CREATEPROG@ $@ $(LDFLAGS) $(EPAROBJ) $(SHLIB_FORCED) $(ENGINE_PAR_LIBS_FORCED)  \
		@SHLIB_MPI_LIBS@ @SHLIB_EPARLIBS@ 
	@SHLIB_POSTPROCESS_EPARLIBS@

## Brad Whitlock, Wed Aug 14 16:26:55 PST 2002
## I added the Java target.
java:
	$(JAVAC) $(JAVAFLAGS) $(JAVAPLUGINFLAGS) $(JAVASRC)

## ------------------------------------------------------------------
## Maintaining source dependencies... either GNU, generic, or none...
## ------------------------------------------------------------------

@SOURCE_DEPENDENCIES@
