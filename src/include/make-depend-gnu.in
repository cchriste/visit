##							-*- makefile -*-
## Automatic dependencies...
##
## Programmer:  Jeremy Meredith
## Date:        June  5, 2007
##

## Notes on the flags:
##  -MP generates dummy rules for headers to avoid the
##      "deleted header file" problem
##  -MG assumes missing headers are generated and places them
##      in the output .d file with no path, and no errors
##
## Neither of these are particularly portable.  To get this to work using xlc,
## for example, the following changes would have to be made:
##  1)  change CDEPFLAGS to: -M -MF tmp$$$$.d -E
##  2)  change the CC lines to avoid the pipe and use this temporary file, e.g.:
##      $(CC) $(CDEPFLAGS) $(CFLAGS) $(CPPFLAGS)  $< > /dev/null ; $(POSTDEPCMD) < tmp$$$$.d > $@ ; rm -f tmp$$$$.d
##
CDEPFLAGS=-M -MP -MG
POSTDEPCMD=sed 's,$*\.o[ :]*,$(@:.d=.o) $@ : ,g'

.c.d:
	@echo "updating $@"; rm -f $@; \
	$(CC) $(CDEPFLAGS) $(CFLAGS) $(CPPFLAGS)  $< | $(POSTDEPCMD) > $@

.c_mds.d:
	@echo "updating $@"; rm -f $@; \
	$(CC) $(CDEPFLAGS) $(CFLAGS) $(CPPFLAGS) -DMDSERVER  $< | $(POSTDEPCMD) > $@

.c_par.d:
	@echo "updating $@"; rm -f $@; \
	$(CC) $(CDEPFLAGS) $(CFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@  $< | $(POSTDEPCMD) > $@

.C.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS)  $< | $(POSTDEPCMD) > $@

.C_eng.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) -DENGINE  $< | $(POSTDEPCMD) > $@

.C_mds.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) -DMDSERVER  $< | $(POSTDEPCMD) > $@

.C_par.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@  $< | $(POSTDEPCMD) > $@

.C_ogl.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS)  $< | $(POSTDEPCMD) > $@

.C_mesa.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(MESA_INCLUDE)  $< | $(POSTDEPCMD) > $@

.C_par_eng.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) -DENGINE @PARALLEL_CPPFLAGS@  $< | $(POSTDEPCMD) > $@

.C_par_ogl.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@  $< | $(POSTDEPCMD) > $@

.C_par_mesa.d:
	@echo "updating $@"; rm -f $@; \
	$(CXX) $(CDEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@ $(MESA_INCLUDE)  $< | $(POSTDEPCMD) > $@

.f.d:
	@echo "can't create fortran dependencies; creating empty $@"; rm -f $@ ; touch $@

SERDEP:=\
 $(ALLOBJ:.o=.d) \
 $(COMMONOBJ:.o=.d) \
 $(CONFIGOBJ:.o=.d) \
 $(INITOBJ:.o=.d) \
 $(LIBRARYSEROBJ:.o=.d) \
 $(MAINOBJ:.o=.d) \
 $(MAINSEROBJ:.o=.d) \
 $(MOCOBJ:.o=.d) \
 $(OBJMOC:.o=.d) \
 $(OBJ:.o=.d) \
 $(FOBJ:.o=.d) \
 $(SEROBJ:.o=.d) \
 $(FSEROBJ:.o=.d) \
 $(TESTOBJ:.o=.d) \
 $(TESTOBJMOC:.o=.d) \
 $(ESEROBJ:.o=.d) \
 $(GOBJ:.o=.d) \
 $(IOBJ:.o=.d) \
 $(JAVAOBJ:.o=.d) \
 $(MOBJ:.o=.d) \
 $(SOBJ:.o=.d) \
 $(VOBJ:.o=.d) \
 $(VIEWERMOCOBJ:.o=.d) \
 $(MOCOBJ:.o=.d)

PARDEP:=\
 $(LIBRARYPAROBJ:.o=.d) \
 $(MAINPAROBJ:.o=.d) \
 $(PAROBJ:.o=.d) \
 $(FPAROBJ:.o=.d) \
 $(EPAROBJ:.o=.d)

DEP=$(SERDEP) @PARDEP@

-include $(DEP)

depend: $(DEP)
