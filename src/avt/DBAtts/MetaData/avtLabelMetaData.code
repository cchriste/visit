Function: avtLabelMetaData2
Declaration: avtLabelMetaData(const std::string &, const std::string &, avtCentering);
Definition:
avtLabelMetaData::avtLabelMetaData(const std::string &n, const std::string &mn,
   avtCentering c) : AttributeSubject(avtLabelMetaData::TypeMapFormatString)
{
    // Initialize all members
    *this = avtLabelMetaData();

    // Override members
    name           = n;
    originalName   = name;
    meshName       = mn;
    centering      = c;
}

Function: Print
Declaration: void Print(ostream &, int = 0) const;
Definition:
// ****************************************************************************
// Method: avtLabelMetaData::Print
//
// Purpose: 
//   Prints the label metadata to a stream.
//
// Programmer: Brad Whitlock
// Creation:   Fri Apr 1 14:47:07 PST 2005
//
// Modifications:
//   
// ****************************************************************************
inline void
Indent(ostream &out, int indent)
{
    for (int i = 0 ; i < indent ; i++)
    {
        out << "\t";
    }
}
void
avtLabelMetaData::Print(ostream &out, int indent) const
{
    Indent(out, indent);
    out << "Name = " << name.c_str() << endl;
    if (name != originalName)
    {
        Indent(out, indent);
        out << "Original Name = " << originalName.c_str() << endl;
    }

    Indent(out, indent);
    out << "Mesh is = " << meshName.c_str() << endl;

    Indent(out, indent);
    out << "Centering = ";
    switch (centering)
    {
      case AVT_NODECENT:
        out << "node centered.";
        break;

      case AVT_ZONECENT:
        out << "zone centered.";
        break;

      case AVT_UNKNOWN_CENT:
      default:
        out << "unknowing centering.";
        break;
    }
    out << endl;

    if (!validVariable)
    {
        Indent(out, indent);
        out << "THIS IS NOT A VALID VARIABLE." << endl;
    }
}

