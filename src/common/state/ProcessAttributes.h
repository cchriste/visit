#ifndef PROCESSATTRIBUTES_H
#define PROCESSATTRIBUTES_H
#include <state_exports.h>
#include <string>
#include <AttributeSubject.h>

// ****************************************************************************
// Class: ProcessAttributes
//
// Purpose:
//    attributes to describe a running process
//
// Notes:      Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Wed Mar 9 07:12:22 PDT 2005
//
// Modifications:
//   
// ****************************************************************************

class STATE_API ProcessAttributes : public AttributeSubject
{
public:
    ProcessAttributes();
    ProcessAttributes(const ProcessAttributes &obj);
    virtual ~ProcessAttributes();

    virtual ProcessAttributes& operator = (const ProcessAttributes &obj);
    virtual bool operator == (const ProcessAttributes &obj) const;
    virtual bool operator != (const ProcessAttributes &obj) const;

    virtual const std::string TypeName() const;
    virtual bool CopyAttributes(const AttributeGroup *);
    virtual AttributeSubject *CreateCompatible(const std::string &) const;
    virtual AttributeSubject *NewInstance(bool) const;

    // Property selection methods
    virtual void SelectAll();
    void SelectPids();
    void SelectPpids();
    void SelectHosts();

    // Property setting methods
    void SetPids(const doubleVector &pids_);
    void SetPpids(const doubleVector &ppids_);
    void SetHosts(const stringVector &hosts_);
    void SetIsParallel(bool isParallel_);

    // Property getting methods
    const doubleVector &GetPids() const;
          doubleVector &GetPids();
    const doubleVector &GetPpids() const;
          doubleVector &GetPpids();
    const stringVector &GetHosts() const;
          stringVector &GetHosts();
    bool               GetIsParallel() const;


    // Keyframing methods
    virtual std::string               GetFieldName(int index) const;
    virtual AttributeGroup::FieldType GetFieldType(int index) const;
    virtual std::string               GetFieldTypeName(int index) const;
    virtual bool                      FieldsEqual(int index, const AttributeGroup *rhs) const;

private:
    doubleVector pids;
    doubleVector ppids;
    stringVector hosts;
    bool         isParallel;
};

#endif
