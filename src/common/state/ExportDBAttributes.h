#ifndef EXPORTDBATTRIBUTES_H
#define EXPORTDBATTRIBUTES_H
#include <state_exports.h>
#include <string>
#include <AttributeSubject.h>
#include <DBOptionsAttributes.h>

// ****************************************************************************
// Class: ExportDBAttributes
//
// Purpose:
//    The attributes for export a database
//
// Notes:      Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Thu May 26 17:12:58 PST 2005
//
// Modifications:
//   
// ****************************************************************************

class STATE_API ExportDBAttributes : public AttributeSubject
{
public:
    ExportDBAttributes();
    ExportDBAttributes(const ExportDBAttributes &obj);
    virtual ~ExportDBAttributes();

    virtual ExportDBAttributes& operator = (const ExportDBAttributes &obj);
    virtual bool operator == (const ExportDBAttributes &obj) const;
    virtual bool operator != (const ExportDBAttributes &obj) const;

    virtual const std::string TypeName() const;
    virtual bool CopyAttributes(const AttributeGroup *);
    virtual AttributeSubject *CreateCompatible(const std::string &) const;
    virtual AttributeSubject *NewInstance(bool) const;

    // Property selection methods
    virtual void SelectAll();
    void SelectDb_type();
    void SelectDb_type_fullname();
    void SelectFilename();
    void SelectDirname();
    void SelectVariables();
    void SelectOpts();

    // Property setting methods
    void SetDb_type(const std::string &db_type_);
    void SetDb_type_fullname(const std::string &db_type_fullname_);
    void SetFilename(const std::string &filename_);
    void SetDirname(const std::string &dirname_);
    void SetVariables(const stringVector &variables_);
    void SetOpts(const DBOptionsAttributes &opts_);

    // Property getting methods
    const std::string         &GetDb_type() const;
          std::string         &GetDb_type();
    const std::string         &GetDb_type_fullname() const;
          std::string         &GetDb_type_fullname();
    const std::string         &GetFilename() const;
          std::string         &GetFilename();
    const std::string         &GetDirname() const;
          std::string         &GetDirname();
    const stringVector        &GetVariables() const;
          stringVector        &GetVariables();
    const DBOptionsAttributes &GetOpts() const;
          DBOptionsAttributes &GetOpts();

    // Persistence methods
    virtual bool CreateNode(DataNode *node, bool completeSave, bool forceAdd);
    virtual void SetFromNode(DataNode *node);


    // Keyframing methods
    virtual std::string               GetFieldName(int index) const;
    virtual AttributeGroup::FieldType GetFieldType(int index) const;
    virtual std::string               GetFieldTypeName(int index) const;
    virtual bool                      FieldsEqual(int index, const AttributeGroup *rhs) const;

private:
    std::string         db_type;
    std::string         db_type_fullname;
    std::string         filename;
    std::string         dirname;
    stringVector        variables;
    DBOptionsAttributes opts;
};

#endif
