Function: CreateNode
Declaration: virtual bool CreateNode(DataNode *parentNode, bool);
Definition:
// ****************************************************************************
// Method: RenderingAttributes::CreateNode
//
// Purpose: 
//   This method creates a DataNode representation of the object so it can be 
//   saved to a config file.
//
// Note:       Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Mon Sep 16 14:03:15 PST 2002
//
// Modifications:
//   Kathleen Bonnell, Wed Dec  4 18:42:48 PST 2002 
//   Removed antialiasingFrames, no longer needed.
//
//   Brad Whitlock, Tue May 20 10:30:00 PDT 2003
//   I made it save only what's different.
//
// ****************************************************************************

bool
RenderingAttributes::CreateNode(DataNode *parentNode, bool forceAdd)
{
    if(parentNode == 0)
        return false;

    bool addToParent = false;
    RenderingAttributes defaultObject;

    // Create a node for RenderingAttributes.
    DataNode *node = new DataNode("RenderingAttributes");

    if(!FieldsEqual(0, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("antialiasing", antialiasing));
    }

    if(!FieldsEqual(1, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("geometryRepresentation", geometryRepresentation));
    }

    if(!FieldsEqual(2, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("displayLists", displayLists));
    }

    if(!FieldsEqual(3, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("stereoRendering", stereoRendering));
    }

    if(!FieldsEqual(4, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("stereoType", stereoType));
    }

    if(!FieldsEqual(5, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("notifyForEachRender", notifyForEachRender));
    }

    if(!FieldsEqual(6, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("scalableRendering", scalableRendering));
    }

    if(!FieldsEqual(7, &defaultObject))
    {
        addToParent = true;
        node->AddNode(new DataNode("scalableThreshold", scalableThreshold));
    }

    // Add the node to the parent node.
    if(addToParent || forceAdd)
        parentNode->AddNode(node);
    else
        delete node;

    return (addToParent || forceAdd);
}

Function: SetFromNode
Declaration: virtual void SetFromNode(DataNode *parentNode);
Definition:
// ****************************************************************************
// Method: RenderingAttributes::SetFromNode
//
// Purpose: 
//   This method sets attributes in this object from values in a DataNode 
//   representation of the object.
//
// Note:       Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Mon Sep 16 14:03:15 PST 2002
//
// Modifications:
//   Kathleen Bonnell, Wed Dec  4 18:42:48 PST 2002 
//   Removed antialiasingFrames, no longer needed.
//
//   Brad Whitlock, Tue May 20 10:40:38 PDT 2003
//   Added scalableRendering and scalableThreshold.
//
// ****************************************************************************

void
RenderingAttributes::SetFromNode(DataNode *parentNode)
{
    if(parentNode == 0)
        return;

    DataNode *searchNode = parentNode->GetNode("RenderingAttributes");
    if(searchNode == 0)
        return;

    DataNode *node;
    if((node = searchNode->GetNode("antialiasing")) != 0)
        SetAntialiasing(node->AsBool());
    if((node = searchNode->GetNode("geometryRepresentation")) != 0)
        SetGeometryRepresentation((GeometryRepresentation)node->AsInt());
    if((node = searchNode->GetNode("displayLists")) != 0)
        SetDisplayLists(node->AsBool());
    if((node = searchNode->GetNode("stereoRendering")) != 0)
        SetStereoRendering(node->AsBool());
    if((node = searchNode->GetNode("stereoType")) != 0)
        SetStereoType((StereoTypes)node->AsInt());
    if((node = searchNode->GetNode("notifyForEachRender")) != 0)
        SetNotifyForEachRender((StereoTypes)node->AsBool());
    if((node = searchNode->GetNode("scalableRendering")) != 0)
        SetScalableRendering(node->AsBool());
    if((node = searchNode->GetNode("scalableThreshold")) != 0)
        SetScalableThreshold(node->AsInt());
}
