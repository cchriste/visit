#ifndef VISUALCUELIST_H
#define VISUALCUELIST_H
#include <state_exports.h>
#include <AttributeSubject.h>
class VisualCueInfo;

// ****************************************************************************
// Class: VisualCueList
//
// Purpose:
//    container object for shipping vectors of visual cues
//
// Notes:      Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Tue Jun 8 15:15:46 PST 2004
//
// Modifications:
//   
// ****************************************************************************

class STATE_API VisualCueList : public AttributeSubject
{
public:
    VisualCueList();
    VisualCueList(const VisualCueList &obj);
    virtual ~VisualCueList();

    virtual void operator = (const VisualCueList &obj);
    virtual bool operator == (const VisualCueList &obj) const;
    virtual bool operator != (const VisualCueList &obj) const;

    virtual const std::string TypeName() const;
    virtual bool CopyAttributes(const AttributeGroup *);
    virtual AttributeSubject *CreateCompatible(const std::string &) const;
    virtual AttributeSubject *NewInstance(bool) const;

    // Property selection methods
    virtual void SelectAll();
    void SelectCues();

    // Property setting methods
    void SetCues(const AttributeGroupVector &cues_);

    // Property getting methods
    const AttributeGroupVector &GetCues() const;
          AttributeGroupVector &GetCues();


    // Attributegroup convenience methods
    void AddVisualCueInfo(const VisualCueInfo &);
    void ClearVisualCueInfos();
    void RemoveVisualCueInfo(int i);
    int  GetNumVisualCueInfos() const;
    VisualCueInfo &GetVisualCueInfo(int i);
    const VisualCueInfo &GetVisualCueInfo(int i) const;

    VisualCueInfo &operator [] (int i);
    const VisualCueInfo &operator [] (int i) const;


    // Keyframing methods
    virtual std::string               GetFieldName(int index) const;
    virtual AttributeGroup::FieldType GetFieldType(int index) const;
    virtual std::string               GetFieldTypeName(int index) const;
    virtual bool                      FieldsEqual(int index, const AttributeGroup *rhs) const;

    // User-defined methods
    void SetFrom(const vector<const VisualCueInfo*>& cues);
protected:
    AttributeGroup *CreateSubAttributeGroup(int index);
private:
    AttributeGroupVector cues;
};

#endif
