#ifndef VIEW2DATTRIBUTES_H
#define VIEW2DATTRIBUTES_H
#include <state_exports.h>
#include <string>
#include <AttributeSubject.h>

// ****************************************************************************
// Class: View2DAttributes
//
// Purpose:
//    This class contains the 2d view attributes.
//
// Notes:      Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Tue Mar 7 11:30:08 PDT 2006
//
// Modifications:
//   
// ****************************************************************************

class STATE_API View2DAttributes : public AttributeSubject
{
public:
    enum TriStateMode
    {
        On,
        Off,
        Auto
    };
    static const double DEFAULT_FULL_FRAME_AUTO_THRESHOLD;

    View2DAttributes();
    View2DAttributes(const View2DAttributes &obj);
    virtual ~View2DAttributes();

    virtual View2DAttributes& operator = (const View2DAttributes &obj);
    virtual bool operator == (const View2DAttributes &obj) const;
    virtual bool operator != (const View2DAttributes &obj) const;

    virtual const std::string TypeName() const;
    virtual bool CopyAttributes(const AttributeGroup *);
    virtual AttributeSubject *CreateCompatible(const std::string &) const;
    virtual AttributeSubject *NewInstance(bool) const;

    // Property selection methods
    virtual void SelectAll();
    void SelectWindowCoords();
    void SelectViewportCoords();

    // Property setting methods
    void SetWindowCoords(const double *windowCoords_);
    void SetViewportCoords(const double *viewportCoords_);
    void SetFullFrameActivationMode(TriStateMode fullFrameActivationMode_);
    void SetFullFrameAutoThreshold(double fullFrameAutoThreshold_);

    // Property getting methods
    const double *GetWindowCoords() const;
          double *GetWindowCoords();
    const double *GetViewportCoords() const;
          double *GetViewportCoords();
    TriStateMode GetFullFrameActivationMode() const;
    double       GetFullFrameAutoThreshold() const;

    // Persistence methods
    virtual bool CreateNode(DataNode *node, bool completeSave, bool forceAdd);
    virtual void SetFromNode(DataNode *node);

    // Enum conversion functions
    static std::string TriStateMode_ToString(TriStateMode);
    static bool TriStateMode_FromString(const std::string &, TriStateMode &);
protected:
    static std::string TriStateMode_ToString(int);
public:

    // Keyframing methods
    virtual std::string               GetFieldName(int index) const;
    virtual AttributeGroup::FieldType GetFieldType(int index) const;
    virtual std::string               GetFieldTypeName(int index) const;
    virtual bool                      FieldsEqual(int index, const AttributeGroup *rhs) const;

    // User-defined methods
    bool GetUseFullFrame(const double *limits=0) const;
    void SetUseFullFrame(bool ff);
private:
    double windowCoords[4];
    double viewportCoords[4];
    int    fullFrameActivationMode;
    double fullFrameAutoThreshold;
};

#endif
