/*****************************************************************************
*
* Copyright (c) 2000 - 2006, The Regents of the University of California
* Produced at the Lawrence Livermore National Laboratory
* All rights reserved.
*
* This file is part of VisIt. For details, see http://www.llnl.gov/visit/. The
* full copyright notice is contained in the file COPYRIGHT located at the root
* of the VisIt distribution or at http://www.llnl.gov/visit/copyright.html.
*
* Redistribution  and  use  in  source  and  binary  forms,  with  or  without
* modification, are permitted provided that the following conditions are met:
*
*  - Redistributions of  source code must  retain the above  copyright notice,
*    this list of conditions and the disclaimer below.
*  - Redistributions in binary form must reproduce the above copyright notice,
*    this  list of  conditions  and  the  disclaimer (as noted below)  in  the
*    documentation and/or materials provided with the distribution.
*  - Neither the name of the UC/LLNL nor  the names of its contributors may be
*    used to  endorse or  promote products derived from  this software without
*    specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT  HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR  IMPLIED WARRANTIES, INCLUDING,  BUT NOT  LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND  FITNESS FOR A PARTICULAR  PURPOSE
* ARE  DISCLAIMED.  IN  NO  EVENT  SHALL  THE  REGENTS  OF  THE  UNIVERSITY OF
* CALIFORNIA, THE U.S.  DEPARTMENT  OF  ENERGY OR CONTRIBUTORS BE  LIABLE  FOR
* ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,  OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT  LIMITED TO, PROCUREMENT OF  SUBSTITUTE GOODS OR
* SERVICES; LOSS OF  USE, DATA, OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER
* CAUSED  AND  ON  ANY  THEORY  OF  LIABILITY,  WHETHER  IN  CONTRACT,  STRICT
* LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING IN ANY  WAY
* OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
* DAMAGE.
*
*****************************************************************************/

// ************************************************************************* //
//                                 avtKerbelPlot.h                             //
// ************************************************************************* //

#ifndef AVT_Kerbel_PLOT_H
#define AVT_Kerbel_PLOT_H


#include <avtLegend.h>
#include <avtPlot.h>

#include <KerbelAttributes.h>
#include <avtVariableMapper.h>

class     avtVariableLegend;
class     avtKerbelFilter;
class     avtLookupTable;


// ****************************************************************************
//  Class:  avtKerbelPlot
//
//  Purpose:
//      A concrete type of avtPlot, this is the Kerbel plot.
//
//  Programmer: ahern -- generated by xml2info
//  Creation:   Tue Dec 18 16:23:56 PST 2001
//
//  Modifications:
//    Kathleen Bonnell, Thu Sep 18 13:44:50 PDT 2003
//    Moved SetOpacity to C file.
//
//    Brad Whitlock, Wed Dec 15 10:48:35 PDT 2004
//    Removed SetVarName.
//
// ****************************************************************************

class avtKerbelPlot : public avtSurfaceDataPlot
{
  public:
                                avtKerbelPlot();
    virtual                    ~avtKerbelPlot();

    virtual const char         *GetName(void) { return "KerbelPlot"; };

    static avtPlot             *Create() { return new avtKerbelPlot; };

    void                        SetOpacity(float o);
    virtual bool                SetColorTable(const char *);
    void                        SetLegend(bool);
    virtual void                SetAtts(const AttributeGroup*);

  protected:
    KerbelAttributes              atts;

    bool                          colorsInitialized;
    avtLookupTable               *avtLUT;

    avtVariableMapper            *varMapper;
    avtVariableLegend            *varLegend;
    avtLegend_p                  varLegendRefPtr;
    avtKerbelFilter              *filter;

    virtual avtMapper          *GetMapper(void) { return varMapper; };
    virtual avtLegend_p         GetLegend(void) { return varLegendRefPtr; };
    virtual avtDataObject_p     ApplyRenderingTransformation(avtDataObject_p p) {return p;};
    virtual avtDataObject_p     ApplyOperators(avtDataObject_p);
    virtual void                CustomizeBehavior(void);
    virtual void                CustomizeMapper(avtDataObjectInformation &);
};


#endif
