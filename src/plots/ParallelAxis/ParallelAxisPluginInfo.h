// ************************************************************************* //
//                               ParallelAxisPluginInfo.h                            //
// ************************************************************************* //

#ifndef PARALLELAXIS_PLUGIN_INFO_H
#define PARALLELAXIS_PLUGIN_INFO_H
#include <PlotPluginInfo.h>
#include <plot_plugin_exports.h>

class ParallelAxisAttributes;

// ****************************************************************************
//  Class: ParallelAxisPluginInfo
//
//  Purpose:
//    Five classes that provide all the information about a ParallelAxis
//    plot plugin.  The information is broken up into five classes since
//    portions of it are only relevant to particular components within
//    visit.  There is the general information which all the components
//    are interested in, the gui information which the gui is interested in,
//    the viewer information which the viewer is interested in, the
//    engine information which the engine is interested in, and finally a.
//    scripting portion that enables the Python VisIt extension to use the
//    plugin.
//
//  Programmer: mblair -- generated by xml2info
//  Creation:   Mon Jun 5 18:19:57 PST 2006
//
//  Modifications:
//
//      Mark Blair, Mon Aug 21 18:29:00 PDT 2006
//      Added wizard support.
//
// ****************************************************************************

class ParallelAxisGeneralPluginInfo: public virtual GeneralPlotPluginInfo
{
  public:
    virtual char *GetName() const;
    virtual char *GetVersion() const;
    virtual char *GetID() const;
    virtual bool  EnabledByDefault() const;
};

class ParallelAxisCommonPluginInfo : public virtual CommonPlotPluginInfo, public virtual ParallelAxisGeneralPluginInfo
{
  public:
    virtual AttributeSubject *AllocAttributes();
    virtual void CopyAttributes(AttributeSubject *to, AttributeSubject *from);
};

class ParallelAxisGUIPluginInfo: public virtual GUIPlotPluginInfo, public virtual ParallelAxisCommonPluginInfo
{
  public:
    virtual const char *GetMenuName() const;
    virtual int GetVariableTypes() const;
    virtual QvisPostableWindowObserver *CreatePluginWindow(int type,
        AttributeSubject *attr, QvisNotepadArea *notepad);
    virtual QvisWizard *CreatePluginWizard(
        AttributeSubject *, QWidget *, const std::string &,
        const avtDatabaseMetaData *, const ExpressionList *, const char * = 0);
    virtual const char **XPMIconData() const;
};

class ParallelAxisViewerPluginInfo: public virtual ViewerPlotPluginInfo, public virtual ParallelAxisCommonPluginInfo
{
  public:
    virtual AttributeSubject *GetClientAtts();
    virtual AttributeSubject *GetDefaultAtts();
    virtual void SetClientAtts(AttributeSubject *atts);
    virtual void GetClientAtts(AttributeSubject *atts);

    virtual avtPlot *AllocAvtPlot();

    virtual void InitializePlotAtts(AttributeSubject *atts,
        const avtDatabaseMetaData *md,
        const char *variableName);
    virtual const char **XPMIconData() const;
    virtual int GetVariableTypes() const;

    static void InitializeGlobalObjects();

  private:
    static ParallelAxisAttributes *defaultAtts;
    static ParallelAxisAttributes *clientAtts;
    static ParallelAxisAttributes *fallbackAtts;
};

class ParallelAxisEnginePluginInfo: public virtual EnginePlotPluginInfo, public virtual ParallelAxisCommonPluginInfo
{
  public:
    virtual avtPlot *AllocAvtPlot();
};

class ParallelAxisScriptingPluginInfo : public virtual ScriptingPlotPluginInfo, public virtual ParallelAxisCommonPluginInfo
{
  public:
    virtual void InitializePlugin(AttributeSubject *subj, void *data);
    virtual void *GetMethodTable(int *nMethods);
    virtual bool TypesMatch(void *pyobject);
    virtual char *GetLogString();
    virtual void SetDefaults(const AttributeSubject *atts);
};

#endif
