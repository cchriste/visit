#!/bin/ksh

# $1 = year, $2 = month, $3 = day
function set_time
{
   cd /data_vobs/VisIt
   echo "element * CHECKEDOUT" > time_file
   echo "element * ../svn_Feb_25_2007/LATEST -time $3-$2-$1.23:59" >> time_file
   echo "element * /main/LATEST -time $3-$2-$1.23:59" >> time_file
   export WINEDITOR="cat"
   echo "yes" | ct edcs time_file
   cd $OLDPWD
}

# $1: directory to update
function svn_update_dir
{
   VOB_dir=$1

   # Check to see if any files were removed from the VOB
   for i in * ; do
      if [[ ! -a $i ]] ; then
         if [[ "$i" != "*" ]] ; then  # We get "*" with empty directories
            echo "Removing file $i"
            svn delete --force $i
         fi
      fi
   done
   typeset list  # typeset makes "list" be a local variable
   list=${VOB_dir}/*
   typeset i
   for i in $list ; do
      name=${i##*/}  # -> /data_vobs/VisIt/mdserver/rpc --> rpc
      if [[ -d $i ]] ; then
         if [[ ! -d $name ]] ; then
             svn mkdir $name
             echo "Added directory $name"
         fi
         cd $name
         svn_update_dir $i
         cd ..
      fi
      if [[ -f $i ]] ; then
         if [[ ! -f $name ]] ; then
             cp $i .
             svn add $name
             echo "Added file $name"
         else
             diff $i $name > /dev/null
             if [[ $? != 0 ]] ; then
                cp $i .
                echo "Updating file $name"
             fi
         fi
      fi
   done
}

function svn_update
{
   print "Doing mdserver only!"
   cd mdserver
   svn_update_dir /data_vobs/VisIt/mdserver > log.${1}.${2}.${3}
   svn commit -m "Update from $2 ${3}, $1"
}


function iterate_over_time
{
   #set -A months January February March April May June July August September October November December
   set -A months January June July
   #set -A days 31 28 31 30 31 30 31 31 30 31 30 31
   set -A days 1 1 1
   set -A years 2003 2004 2005 2006 2007

   Y=0
   while (( Y < ${#years[*]} )) ; do
      M=0
      while (( M < ${#months[*]} )) ; do
         if [[ "${years[$Y]}" == 2003 ]] ; then
             if (( M < 5 )) ; then  # June 2003 is first accepted date
                (( M += 1 ))
                continue
             fi
         fi
         if [[ "${years[$Y]}" == 2007 ]] ; then
             if (( M > 1 )) ; then  # Month 1 is Feb (Jan is 0)
                (( M += 1 ))
                continue
             fi
         fi
         D=0
         while (( D < ${days[$M]} )) ; do
             if [[ "${years[$Y]}" == 2007 ]] ; then
                 if (( D > 25 )) ; then
                    (( D += 1 ))
                    continue
                 fi
             fi
             echo  "Doing ${years[$Y]}, ${months[$M]}, $D"
             (( D += 1 ))  # Increment day first, so it is not 0-based
             set_time ${years[$Y]} ${months[$M]} $D
             svn_update ${years[$Y]} ${months[$M]} $D 
         done
         (( M += 1 ))
      done
      (( Y += 1 ))
   done
}

cd /data_vobs/VisIt
if [[ ! -d components ]] ; then
  echo "You must have already set up your ClearCase view.  Bailing out"
  exit 1
fi

WC=/scratch/childs/wc
REPO=file:///scratch/childs/svn/visit
cd $WC
svn checkout $REPO
cd visit
if [[ ! -d trunk ]] ; then
   svn mkdir trunk -m "add trunk"
fi
cd trunk
iterate_over_time
