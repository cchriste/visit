// ************************************************************************* //
//  File: avtMetricThresholdFilter.h
// ************************************************************************* //

#ifndef AVT_MetricThreshold_FILTER_H
#define AVT_MetricThreshold_FILTER_H


#include <avtPluginStreamer.h>
#include <MetricThresholdAttributes.h>

class vtkDataSet;
class vtkDataArray;
class vtkPoints;
class vtkRectilinearGrid;


// ****************************************************************************
//  Class: avtMetricThresholdFilter
//
//  Purpose:
//      A plugin operator for MetricThreshold.
//
//  Programmer: haddox1 -- generated by xml2info
//  Creation:   Fri Jun 14 15:42:05 PST 2002
//
// ****************************************************************************

class avtMetricThresholdFilter : public avtPluginStreamer
{
  public:
                         avtMetricThresholdFilter();
    virtual             ~avtMetricThresholdFilter();

    static avtFilter    *Create();

    virtual const char  *GetType(void)  { return "avtMetricThresholdFilter"; };
    virtual const char  *GetDescription(void)
                             { return "Metric Threshold"; };

    virtual void         SetAtts(const AttributeGroup*);
    virtual bool         Equivalent(const AttributeGroup*);

  protected:
    MetricThresholdAttributes   atts;

    virtual vtkDataSet  *ExecuteData(vtkDataSet *, int, std::string);
    virtual void         RefashionDataObjectInfo();

    vtkDataSet          *ExecuteOnScalarData(vtkDataSet *, vtkDataArray *);
    vtkPoints           *CreateRectilinearPoints(vtkRectilinearGrid *);
    inline bool          PassesTest(int type, float value);
};


#endif
