Function: CopyAttributes
Declaration: bool CopyAttributes(const AttributeGroup *atts);
Definition:
// ****************************************************************************
// Method: ThresholdAttributes::CopyAttributes
//
// Purpose: 
//   CopyAttributes method for the ThresholdAttributes class.
//
// Note:       Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Tue Sep 13 08:54:28 PDT 2005
//
// Modifications:
//   
//   Mark Blair, Tue Mar  7 13:25:00 PST 2006
//   Upgraded to support multiple threshold variables.
//
//   Mark Blair, Wed Sep 20 10:59:41 PDT 2006
//   Uses time ordinals from the Extents tool to avoid conflict with changes
//   hand-typed by the user in the Threshold operator's GUI window.
//   
//   Mark Blair, Tue Oct  3 13:19:11 PDT 2006
//   Verifies that default plot variable is scalar if in threshold variable list.
//
//    Jeremy Meredith, Fri Feb 15 13:14:22 EST 2008
//    Added support for AxisRestrictionAttributes.
//
//   Jeremy Meredith, Tue Apr 22 14:31:20 EDT 2008
//   Removed Extents tool.  (Functionality subsumed by axis restriction tool.)
//
// ****************************************************************************

bool
ThresholdAttributes::CopyAttributes(const AttributeGroup *atts)
{
    bool retval = false;
    
    if (TypeName() == atts->TypeName())
    {
        // Call assignment operator.
        const ThresholdAttributes *tmp = (const ThresholdAttributes *)atts;
        *this = *tmp;
        retval = true;
    }
    else if (atts->TypeName() == "AxisRestrictionAttributes")
    {
        const AxisRestrictionAttributes *arAtts =
            (const AxisRestrictionAttributes*)atts;

        stringVector toolVarNames = arAtts->GetNames();
        doubleVector toolMinima   = arAtts->GetMinima();
        doubleVector toolMaxima   = arAtts->GetMaxima();

        for (size_t lv=0; lv < listedVarNames.size(); lv++)
        {
            for (size_t tv=0; tv < toolVarNames.size(); tv++)
            {
                if (toolVarNames[tv] == listedVarNames[lv])
                {
                    lowerBounds[lv] = toolMinima[tv];
                    upperBounds[lv] = toolMaxima[tv];
                }
                else if (toolVarNames[tv] == defaultVarName &&
                         listedVarNames[lv] == "default" &&
                         defaultVarIsScalar)
                {
                    lowerBounds[lv] = toolMinima[tv];
                    upperBounds[lv] = toolMaxima[tv];
                }
            }
        }

        retval = true;
    }

    return retval;
}


Target: xml2info
Function: ThresholdViewerPluginInfo::InitializeOperatorAtts
Declaration: virtual void ThresholdViewerPluginInfo::InitializeOperatorAtts(...);
Definition:
// ****************************************************************************
//  Method: ThresholdViewerPluginInfo::InitializeOperatorAtts
//
//  Purpose:
//    Initialize the operator attributes to the default attributes.
//
//  Arguments:
//    atts      The attribute subject to initialize.
//    md        The metadata used to initialize.
//    atts      The variable name used to initialize.
//
//  Programmer: mblair -- generated by xml2info
//  Creation:   Thu Mar 9 16:03:07 PST 2006
//
//   Modifications:
//   
//     Mark Blair, Thu Mar  9 18:25:00 PST 2006
//     Upgraded to support multiple threshold variables.
//
//     Mark Blair, Tue Aug  8 17:47:00 PDT 2006
//     Now accommodates an empty list of threshold variables; does pass-through.
//     Also checks for attribute consistency.
//
//     Mark Blair, Wed Sep  6 19:13:00 PDT 2006
//     Corrected bad policy: Was sometimes changing user's defaults explicitly.
//
//     Mark Blair, Thu Sep 28 12:07:05 PDT 2006
//     Accommodate old Threshold mode in CLI by supplying any missing default
//     attribute values if attributes are set up for a single threshold variable.
//
//     Mark Blair, Tue Oct  3 13:19:11 PDT 2006
//     Set attribute flag that indicates whether plot variable is a scalar.
//
// ****************************************************************************
#include <ViewerPlot.h>
#include <DebugStream.h>
void
ThresholdViewerPluginInfo::InitializeOperatorAtts(AttributeSubject *atts,
                                                  const ViewerPlot *plot,
                                                  const bool fromDefault)
{
    if (fromDefault)
        *(ThresholdAttributes *)atts = *defaultAtts;
    else
        *(ThresholdAttributes *)atts = *clientAtts;
        
    ThresholdAttributes *initAtts = (ThresholdAttributes *)atts;
        
    initAtts->SupplyMissingDefaultsIfAppropriate();
    
    initAtts->SetDefaultVarName(plot->GetVariableName());
    initAtts->SetDefaultVarIsScalar(plot->GetVarType() == AVT_SCALAR_VAR);
}

Target: xml2info
Function: ThresholdEnginePluginInfo::AllocAvtPluginFilter
Declaration: virtual avtPluginFilter *AllocAvtPluginFilter();
Definition:
// ****************************************************************************
//  Method: ThresholdEnginePluginInfo::AllocAvtPluginFilter
//
//  Purpose:
//    Return a pointer to a newly allocated avtPluginFilter.
//
//  Returns:    A pointer to the newly allocated avtPluginFilter.
//
//  Programmer: Brad Whitlock
//  Creation:   Fri Dec 10 16:40:13 PST 2010
//
// ****************************************************************************
#include <avtThresholdPluginFilter.h>
avtPluginFilter *
ThresholdEnginePluginInfo::AllocAvtPluginFilter()
{
    return new avtThresholdPluginFilter;
}
