// ************************************************************************* //
//  File: avtThresholdFilter.h
// ************************************************************************* //

#ifndef AVT_Threshold_FILTER_H
#define AVT_Threshold_FILTER_H

#include <avtPluginDataTreeStreamer.h>
#include <ThresholdAttributes.h>

#include <avtGhostData.h>

class     vtkDataSet;


// ****************************************************************************
//  Class: avtThresholdFilter
//
//  Purpose:
//      A plugin operator for Threshold.
//
//  Programmer: childs -- generated by xml2info
//  Creation:   Tue Oct 23 16:38:18 PST 2001
//
//  Modifications:
//
//    Hank Childs, Sat Mar 19 10:18:52 PST 2005
//    Add support for structured chunking.
//
// ****************************************************************************

class avtThresholdFilter : public avtPluginDataTreeStreamer
{
  public:
                         avtThresholdFilter();
    virtual             ~avtThresholdFilter() {;};

    static avtFilter    *Create();

    virtual const char  *GetType(void)  { return "avtThresholdFilter"; };
    virtual const char  *GetDescription(void)
                             { return "Thresholding"; };

    virtual void         SetAtts(const AttributeGroup*);
    virtual bool         Equivalent(const AttributeGroup*);

  protected:
    ThresholdAttributes   atts;

    virtual avtPipelineSpecification_p
                          PerformRestriction(avtPipelineSpecification_p);

    bool                  downstreamRectilinearMeshOptimizations;
    bool                  downstreamCurvilinearMeshOptimizations;
    avtGhostDataType      downstreamGhostType;
    bool                  chunkedStructuredMeshes;

    virtual avtDataTree_p ExecuteDataTree(vtkDataSet *, int, std::string);
    virtual void          RefashionDataObjectInfo(void);
    virtual void          PreExecute(void);
    virtual void          PostExecute(void);
};


#endif
