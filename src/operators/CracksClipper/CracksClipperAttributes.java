package llnl.visit.operators;

import llnl.visit.AttributeSubject;
import llnl.visit.CommunicationBuffer;
import llnl.visit.Plugin;

// ****************************************************************************
// Class: CracksClipperAttributes
//
// Purpose:
//    Attributes for the cracks clipper operator
//
// Notes:      Autogenerated by xml2java.
//
// Programmer: xml2java
// Creation:   Tue Nov 29 12:28:10 PDT 2005
//
// Modifications:
//   
// ****************************************************************************

public class CracksClipperAttributes extends AttributeSubject implements Plugin
{
    public CracksClipperAttributes()
    {
        super(7);

        crack1Var = new String("crack1_dir");
        crack2Var = new String("crack2_dir");
        crack3Var = new String("crack3_dir");
        strainVar = new String("void_strain_ten");
        useCrack1 = true;
        useCrack2 = true;
        useCrack3 = true;
    }

    public CracksClipperAttributes(CracksClipperAttributes obj)
    {
        super(7);

        crack1Var = new String(obj.crack1Var);
        crack2Var = new String(obj.crack2Var);
        crack3Var = new String(obj.crack3Var);
        strainVar = new String(obj.strainVar);
        useCrack1 = obj.useCrack1;
        useCrack2 = obj.useCrack2;
        useCrack3 = obj.useCrack3;

        SelectAll();
    }

    public boolean equals(CracksClipperAttributes obj)
    {
        // Create the return value
        return ((crack1Var == obj.crack1Var) &&
                (crack2Var == obj.crack2Var) &&
                (crack3Var == obj.crack3Var) &&
                (strainVar == obj.strainVar) &&
                (useCrack1 == obj.useCrack1) &&
                (useCrack2 == obj.useCrack2) &&
                (useCrack3 == obj.useCrack3));
    }

    public String GetName() { return "CracksClipper"; }
    public String GetVersion() { return "1.0"; }

    // Property setting methods
    public void SetCrack1Var(String crack1Var_)
    {
        crack1Var = crack1Var_;
        Select(0);
    }

    public void SetCrack2Var(String crack2Var_)
    {
        crack2Var = crack2Var_;
        Select(1);
    }

    public void SetCrack3Var(String crack3Var_)
    {
        crack3Var = crack3Var_;
        Select(2);
    }

    public void SetStrainVar(String strainVar_)
    {
        strainVar = strainVar_;
        Select(3);
    }

    public void SetUseCrack1(boolean useCrack1_)
    {
        useCrack1 = useCrack1_;
        Select(4);
    }

    public void SetUseCrack2(boolean useCrack2_)
    {
        useCrack2 = useCrack2_;
        Select(5);
    }

    public void SetUseCrack3(boolean useCrack3_)
    {
        useCrack3 = useCrack3_;
        Select(6);
    }

    // Property getting methods
    public String  GetCrack1Var() { return crack1Var; }
    public String  GetCrack2Var() { return crack2Var; }
    public String  GetCrack3Var() { return crack3Var; }
    public String  GetStrainVar() { return strainVar; }
    public boolean GetUseCrack1() { return useCrack1; }
    public boolean GetUseCrack2() { return useCrack2; }
    public boolean GetUseCrack3() { return useCrack3; }

    // Write and read methods.
    public void WriteAtts(CommunicationBuffer buf)
    {
        if(WriteSelect(0, buf))
            buf.WriteString(crack1Var);
        if(WriteSelect(1, buf))
            buf.WriteString(crack2Var);
        if(WriteSelect(2, buf))
            buf.WriteString(crack3Var);
        if(WriteSelect(3, buf))
            buf.WriteString(strainVar);
        if(WriteSelect(4, buf))
            buf.WriteBool(useCrack1);
        if(WriteSelect(5, buf))
            buf.WriteBool(useCrack2);
        if(WriteSelect(6, buf))
            buf.WriteBool(useCrack3);
    }

    public void ReadAtts(int n, CommunicationBuffer buf)
    {
        for(int i = 0; i < n; ++i)
        {
            int index = (int)buf.ReadByte();
            switch(index)
            {
            case 0:
                SetCrack1Var(buf.ReadString());
                break;
            case 1:
                SetCrack2Var(buf.ReadString());
                break;
            case 2:
                SetCrack3Var(buf.ReadString());
                break;
            case 3:
                SetStrainVar(buf.ReadString());
                break;
            case 4:
                SetUseCrack1(buf.ReadBool());
                break;
            case 5:
                SetUseCrack2(buf.ReadBool());
                break;
            case 6:
                SetUseCrack3(buf.ReadBool());
                break;
            }
        }
    }


    // Attributes
    private String  crack1Var;
    private String  crack2Var;
    private String  crack3Var;
    private String  strainVar;
    private boolean useCrack1;
    private boolean useCrack2;
    private boolean useCrack3;
}

