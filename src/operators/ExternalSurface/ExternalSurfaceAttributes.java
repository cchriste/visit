package llnl.visit.operators;

import llnl.visit.AttributeSubject;
import llnl.visit.CommunicationBuffer;
import llnl.visit.Plugin;

// ****************************************************************************
// Class: ExternalSurfaceAttributes
//
// Purpose:
//    This class contains attributes for the external surface operator.
//
// Notes:      Autogenerated by xml2java.
//
// Programmer: xml2java
// Creation:   Mon Sep 26 09:31:50 PDT 2005
//
// Modifications:
//   
// ****************************************************************************

public class ExternalSurfaceAttributes extends AttributeSubject implements Plugin
{
    public ExternalSurfaceAttributes()
    {
        super(2);

        removeGhosts = false;
        edgesIn2D = true;
    }

    public ExternalSurfaceAttributes(ExternalSurfaceAttributes obj)
    {
        super(2);

        removeGhosts = obj.removeGhosts;
        edgesIn2D = obj.edgesIn2D;

        SelectAll();
    }

    public boolean equals(ExternalSurfaceAttributes obj)
    {
        // Create the return value
        return ((removeGhosts == obj.removeGhosts) &&
                (edgesIn2D == obj.edgesIn2D));
    }

    public String GetName() { return "ExternalSurface"; }
    public String GetVersion() { return "1.0"; }

    // Property setting methods
    public void SetRemoveGhosts(boolean removeGhosts_)
    {
        removeGhosts = removeGhosts_;
        Select(0);
    }

    public void SetEdgesIn2D(boolean edgesIn2D_)
    {
        edgesIn2D = edgesIn2D_;
        Select(1);
    }

    // Property getting methods
    public boolean GetRemoveGhosts() { return removeGhosts; }
    public boolean GetEdgesIn2D() { return edgesIn2D; }

    // Write and read methods.
    public void WriteAtts(CommunicationBuffer buf)
    {
        if(WriteSelect(0, buf))
            buf.WriteBool(removeGhosts);
        if(WriteSelect(1, buf))
            buf.WriteBool(edgesIn2D);
    }

    public void ReadAtts(int n, CommunicationBuffer buf)
    {
        for(int i = 0; i < n; ++i)
        {
            int index = (int)buf.ReadByte();
            switch(index)
            {
            case 0:
                SetRemoveGhosts(buf.ReadBool());
                break;
            case 1:
                SetEdgesIn2D(buf.ReadBool());
                break;
            }
        }
    }


    // Attributes
    private boolean removeGhosts;
    private boolean edgesIn2D;
}

