#ifndef REMOVECELLSATTRIBUTES_H
#define REMOVECELLSATTRIBUTES_H
#include <AttributeSubject.h>

// ****************************************************************************
// Class: RemoveCellsAttributes
//
// Purpose:
//    This class contains attributes for the RemoveCells operator.
//
// Notes:      Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Mon Jul 21 09:53:49 PDT 2003
//
// Modifications:
//   
// ****************************************************************************

class RemoveCellsAttributes : public AttributeSubject
{
public:
    RemoveCellsAttributes();
    RemoveCellsAttributes(const RemoveCellsAttributes &obj);
    virtual ~RemoveCellsAttributes();

    virtual void operator = (const RemoveCellsAttributes &obj);
    virtual bool operator == (const RemoveCellsAttributes &obj) const;
    virtual bool operator != (const RemoveCellsAttributes &obj) const;

    virtual const std::string TypeName() const;
    virtual bool CopyAttributes(const AttributeGroup *);
    virtual AttributeSubject *CreateCompatible(const std::string &) const;

    // Property selection methods
    virtual void SelectAll();
    void SelectCellList();
    void SelectDomainList();

    // Property setting methods
    void SetCell(int cell_);
    void SetDomain(int domain_);
    void SetCellList(const intVector &cellList_);
    void SetDomainList(const intVector &domainList_);

    // Property getting methods
    int             GetCell() const;
    int             GetDomain() const;
    const intVector &GetCellList() const;
          intVector &GetCellList();
    const intVector &GetDomainList() const;
          intVector &GetDomainList();

    // Persistence methods
    virtual bool CreateNode(DataNode *node, bool forceAdd);
    virtual void SetFromNode(DataNode *node);


    // Keyframing methods
    virtual std::string               GetFieldName(int index) const;
    virtual AttributeGroup::FieldType GetFieldType(int index) const;
    virtual std::string               GetFieldTypeName(int index) const;
    virtual bool                      FieldsEqual(int index, const AttributeGroup *rhs) const;

private:
    int       cell;
    int       domain;
    intVector cellList;
    intVector domainList;
};

#endif
