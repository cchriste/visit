// ************************************************************************* //
//  File: ContextPluginInfo.h
// ************************************************************************* //

#ifndef CONTEXT_PLUGIN_INFO_H
#define CONTEXT_PLUGIN_INFO_H
#include <OperatorPluginInfo.h>
#include <operator_plugin_exports.h>

class ContextAttributes;

// ****************************************************************************
//  Class: ContextPluginInfo
//
//  Purpose:
//    Five classes that provide all the information about an Context operator
//
//  Programmer: whitlocb -- generated by xml2info
//  Creation:   Fri Jan 6 18:12:25 PST 2006
//
//  Modifications:
//
// ****************************************************************************

class ContextGeneralPluginInfo : public virtual GeneralOperatorPluginInfo
{
  public:
    virtual char *GetName() const;
    virtual char *GetVersion() const;
    virtual char *GetID() const;
    virtual bool  EnabledByDefault() const;
};

class ContextCommonPluginInfo : public virtual CommonOperatorPluginInfo, public virtual ContextGeneralPluginInfo
{
  public:
    virtual AttributeSubject *AllocAttributes();
    virtual void CopyAttributes(AttributeSubject *to, AttributeSubject *from);
};

class ContextGUIPluginInfo : public virtual GUIOperatorPluginInfo, public virtual ContextCommonPluginInfo
{
  public:
    virtual const char *GetMenuName() const;
    virtual QvisPostableWindowObserver *CreatePluginWindow(int type,
        AttributeSubject *attr, QvisNotepadArea *notepad);
};

class ContextViewerPluginInfo : public virtual ViewerOperatorPluginInfo, public virtual ContextCommonPluginInfo
{
  public:
    virtual AttributeSubject *GetClientAtts();
    virtual AttributeSubject *GetDefaultAtts();
    virtual void SetClientAtts(AttributeSubject *atts);
    virtual void GetClientAtts(AttributeSubject *atts);

    virtual void InitializeOperatorAtts(AttributeSubject *atts,
                                        const ViewerPlot *plot,
                                        const bool fromDefault);

    static void InitializeGlobalObjects();
  private:
    static ContextAttributes *defaultAtts;
    static ContextAttributes *clientAtts;
};

class ContextEnginePluginInfo : public virtual EngineOperatorPluginInfo, public virtual ContextCommonPluginInfo
{
  public:
    virtual avtPluginFilter *AllocAvtPluginFilter();
};

class ContextScriptingPluginInfo : public virtual ScriptingOperatorPluginInfo, public virtual ContextCommonPluginInfo
{
  public:
    virtual void InitializePlugin(AttributeSubject *subj, void *data);
    virtual void *GetMethodTable(int *nMethods);
    virtual bool TypesMatch(void *pyobject);
    virtual char *GetLogString();
    virtual void SetDefaults(const AttributeSubject *atts);
};

#endif
