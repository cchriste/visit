#ifndef DEFEREXPRESSIONATTRIBUTES_H
#define DEFEREXPRESSIONATTRIBUTES_H
#include <string>
#include <AttributeSubject.h>

// ****************************************************************************
// Class: DeferExpressionAttributes
//
// Purpose:
//    Attributes for the DeferExpression operator
//
// Notes:      Autogenerated by xml2atts.
//
// Programmer: xml2atts
// Creation:   Tue Sep 20 13:25:13 PST 2005
//
// Modifications:
//   
// ****************************************************************************

class DeferExpressionAttributes : public AttributeSubject
{
public:
    DeferExpressionAttributes();
    DeferExpressionAttributes(const DeferExpressionAttributes &obj);
    virtual ~DeferExpressionAttributes();

    virtual DeferExpressionAttributes& operator = (const DeferExpressionAttributes &obj);
    virtual bool operator == (const DeferExpressionAttributes &obj) const;
    virtual bool operator != (const DeferExpressionAttributes &obj) const;

    virtual const std::string TypeName() const;
    virtual bool CopyAttributes(const AttributeGroup *);
    virtual AttributeSubject *CreateCompatible(const std::string &) const;
    virtual AttributeSubject *NewInstance(bool) const;

    // Property selection methods
    virtual void SelectAll();
    void SelectExprs();

    // Property setting methods
    void SetExprs(const stringVector &exprs_);

    // Property getting methods
    const stringVector &GetExprs() const;
          stringVector &GetExprs();

    // Persistence methods
    virtual bool CreateNode(DataNode *node, bool completeSave, bool forceAdd);
    virtual void SetFromNode(DataNode *node);


    // Keyframing methods
    virtual std::string               GetFieldName(int index) const;
    virtual AttributeGroup::FieldType GetFieldType(int index) const;
    virtual std::string               GetFieldTypeName(int index) const;
    virtual bool                      FieldsEqual(int index, const AttributeGroup *rhs) const;

private:
    stringVector exprs;
};

#endif
