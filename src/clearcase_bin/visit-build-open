#!/bin/sh
#-----------------------------------------------------------------------
#
# VISIT-BUILD-OPEN - Build the visit distributions on the open network.
#
# Author: Eric Brugger
# Date:   October 27, 2000
#
# Usage:
#    visit-build-open -d <distribution>
#
# Modifications:
#   Brad Whitlock, Fri Dec 15 09:51:55 PDT 2006
#   Added --enable-visitmodule for some platforms.
#
#-----------------------------------------------------------------------

test=no

user=`whoami`

#
# Set the user e-mail address.
#
emailName=brugger1@llnl.gov
case $user in
   kbonnell)
      emailName=bonnell2@llnl.gov
      ;; 
   brugger)
      emailName=brugger1@llnl.gov
      ;;
   childs)
      emailName=childs3@llnl.gov
      ;;
   mcmiller)
      emailName=miller86@llnl.gov
      ;;
   miller)
      emailName=miller86@llnl.gov
      ;;
   whitlocb)
      emailName=whitlock2@llnl.gov
      ;;
esac

#
# Parse the execute line, providing default values for error checking.
#
hoth=true
sunspot=true
quad=true
up=true
pengra=true
thunder=true
prism=true
yana=true
xchem=true
davinci=true

dist=undefined

#
# The loop is executed once for each symbol on the execute line.  This means
# that $1 may be blank for later executions of the loop if any "shift 2"
# commands are executed.  The variable abc is not used in the loop.  
#
for abc
do
   case $1 in
      -none)
         hoth=false
         sunspot=false
         quad=false
         up=false
         pengra=false
         thunder=false
         prism=false
         yana=false
         xchem=false
         davinci=false
         shift
         ;;
      -hoth)
         hoth=false
         shift
         ;;
      +hoth)
         hoth=true
         shift
         ;;
      -sunspot)
         sunspot=false
         shift
         ;;
      +sunspot)
         sunspot=true
         shift
         ;;
      -quad)
         quad=false
         shift
         ;;
      +quad)
         quad=true
         shift
         ;;
      -up)
         up=false
         shift
         ;;
      +up)
         up=true
         shift
         ;;
      -pengra)
         pengra=false
         shift
         ;;
      +pengra)
         pengra=true
         shift
         ;;
      -thunder)
         thunder=false
         shift
         ;;
      +thunder)
         thunder=true
         shift
         ;;
      -prism)
         prism=false
         shift
         ;;
      +prism)
         prism=true
         shift
         ;;
      -yana)
         yana=false
         shift
         ;;
      +yana)
         yana=true
         shift
         ;;
      -xchem)
         xchem=false
         shift
         ;;
      +xchem)
         xchem=true
         shift
         ;;
      -davinci)
         davinci=false
         shift
         ;;
      +davinci)
         davinci=true
         shift
         ;;
      -d)
         dist=$2
         shift 2
         ;;
   esac
done

#
# Check that the distribution name was provided.
#
if [ $dist = undefined ]
then
   echo "Usage: [-none] [-<machine name>] -d <distribution>"
   exit
fi

#
# Check that the distribution exists.
#
distfile=$dist.tar.gz
if [ ! -f $distfile ]
then
   echo "Distribution file doesn't exist."
   exit
fi

#
# Build on hoth.
#
rm -f hoth
cat <<EOF > hoth
#!/bin/sh
if test ! -e /scratch/$user ; then
   mkdir /scratch/$user
fi
if test ! -e /scratch/$user/hoth ; then
   mkdir /scratch/$user/hoth
fi
rm -rf /scratch/$user/hoth/visitbuild
mkdir /scratch/$user/hoth/visitbuild
mv hoth_$dist.tar.gz /scratch/$user/hoth/visitbuild/$dist.tar.gz
cd /scratch/$user/hoth/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel --enable-viewer-mesa-stub --enable-visitmodule >> ../buildlog 2>&1
make -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on hoth"         > resultlog 2>&1
echo "       ------------------------"        >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $hoth = true ]
then
   if [ $test = no ]
   then
      scp hoth hoth:hoth_buildit
      scp $dist.tar.gz hoth:hoth_$dist.tar.gz
      ssh hoth "chmod 750 hoth_buildit;./hoth_buildit" &
   fi
fi

#
# Build on sunspot.
#
rm -f sunspot
cat <<EOF > sunspot
#!/bin/sh
if test ! -d /export/scratch/$user ; then
   mkdir /export/scratch/$user
fi
if test ! -d /export/scratch/$user/sunspot ; then
   mkdir /export/scratch/$user/sunspot
fi
rm -rf /export/scratch/$user/sunspot/visitbuild
mkdir /export/scratch/$user/sunspot/visitbuild
mv sunspot_$dist.tar.gz /export/scratch/$user/sunspot/visitbuild/$dist.tar.gz
cd /export/scratch/$user/sunspot/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-visitmodule >> ../buildlog 2>&1
cd databases/Fluent
sed "s/\\\$(CXXFLAGSORIG)/-D_LARGEFILE64_SOURCE -Wall -Wno-sign-compare -Wno-deprecated/" Makefile > Makefile+;rm Makefile;mv Makefile+ Makefile
cd ../..
make -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.sunos5.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on sunspot"      > resultlog 2>&1
echo "       ---------------------------"     >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $sunspot = true ]
then
   if [ $test = no ]
   then
      scp sunspot sunspot:sunspot_buildit
      scp $dist.tar.gz sunspot:sunspot_$dist.tar.gz
      ssh sunspot "chmod 750 sunspot_buildit;./sunspot_buildit" &
   fi
fi

#
# Build on quad.
#
rm -f quad
cat <<EOF > quad
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/quad ; then
   mkdir /usr/tmp/$user/quad
fi
rm -rf /usr/tmp/$user/quad/visitbuild
mkdir /usr/tmp/$user/quad/visitbuild
mv quad_$dist.tar.gz /usr/tmp/$user/quad/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/quad/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 MAKE=gmake ./configure --enable-parallel --enable-visitmodule >> ../buildlog 2>&1
gmake -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -make gmake >> ../buildlog 2>&1
mv visit\$ver2.irix6.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on quad"         > resultlog 2>&1
echo "       ------------------------"        >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $quad = true ]
then
   if [ $test = no ]
   then
      scp quad quad:quad_buildit
      scp $dist.tar.gz quad:quad_$dist.tar.gz
      ssh quad "chmod 750 quad_buildit;./quad_buildit" &
   fi
fi

#
# Build on up, both serial and parallel versions.
#
rm -f up
cat <<EOF > up
#!/bin/sh
PATH=/usr/local/bin:\$PATH
if test ! -d /p/gup1/$user ; then
   mkdir /p/gup1/$user
fi
if test ! -d /p/gup1/$user/up ; then
   mkdir /p/gup1/$user/up
fi
rm -rf /p/gup1/$user/up/visitbuild
mkdir /p/gup1/$user/up/visitbuild
mv up_$dist.tar.gz /p/gup1/$user/up/visitbuild/$dist.tar.gz
cd /p/gup1/$user/up/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
mv $dist ${dist}_32
cd ${dist}_32
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
OBJECT_MODE=32
export OBJECT_MODE
env CXXFLAGS=-O2 MAKE=gmake ./configure --with-config=config-site/up041_32.conf >> ../buildlog 2>&1
gmake -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -make gmake >> ../buildlog 2>&1
mv visit\$ver2.aix.tar.gz ..
cd ..
gunzip -c $dist.tar.gz | tar xvf - >> buildlog 2>&1
cd $dist
OBJECT_MODE=64
export OBJECT_MODE
env CXXFLAGS=-O2 MAKE=gmake ./configure --enable-parallel >> ../buildlog 2>&1
gmake -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -make gmake >> ../buildlog 2>&1
mv visit\$ver2.aix64.tar.gz ..
cd ..
echo "        build of visit on up"           > resultlog 2>&1
echo "       ----------------------"          >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "            32 bit build"               >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls ${dist}_32/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls ${dist}_32/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls ${dist}_32/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls ${dist}_32/plugins/databases/libI* | sed "s/${dist}_32\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "            64 bit build"               >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $up = true ]
then
   if [ $test = no ]
   then
      scp up up:up_buildit
      scp $dist.tar.gz up:up_$dist.tar.gz
      ssh up "chmod 750 up_buildit;./up_buildit" &
   fi
fi

#
# Build on pengra.
#
rm -f pengra
cat <<EOF > pengra
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/pengra ; then
   mkdir /usr/tmp/$user/pengra
fi
rm -rf /usr/tmp/$user/pengra/visitbuild
mkdir /usr/tmp/$user/pengra/visitbuild
mv pengra_$dist.tar.gz /usr/tmp/$user/pengra/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/pengra/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on pengra"       > resultlog 2>&1
echo "       --------------------------"      >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $pengra = true ]
then
   if [ $test = no ]
   then
      scp pengra pengra1:pengra_buildit
      scp $dist.tar.gz pengra1:pengra_$dist.tar.gz
      ssh pengra1 "chmod 750 pengra_buildit;./pengra_buildit" &
   fi
fi

#
# Build on thunder.
#
rm -f thunder
cat <<EOF > thunder
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/thunder ; then
   mkdir /usr/tmp/$user/thunder
fi
rm -rf /usr/tmp/$user/thunder/visitbuild
mkdir /usr/tmp/$user/thunder/visitbuild
mv thunder_$dist.tar.gz /usr/tmp/$user/thunder/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/thunder/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel --enable-visitmodule >> ../buildlog 2>&1
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux-ia64.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on thunder"      > resultlog 2>&1
echo "       ---------------------------"     >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $thunder = true ]
then
   if [ $test = no ]
   then
      scp thunder thunder2:thunder_buildit
      scp $dist.tar.gz thunder2:thunder_$dist.tar.gz
      ssh thunder2 "chmod 750 thunder_buildit;./thunder_buildit" &
   fi
fi

#
# Build on prism.
#
rm -f prism
cat <<EOF > prism
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/prism ; then
   mkdir /usr/tmp/$user/prism
fi
rm -rf /usr/tmp/$user/prism/visitbuild
mkdir /usr/tmp/$user/prism/visitbuild
mv prism_$dist.tar.gz /usr/tmp/$user/prism/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/prism/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel --enable-visitmodule >> ../buildlog 2>&1
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -switch ib >> ../buildlog 2>&1
mv visit\$ver2.linux-x86_64-ib.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on prism"        > resultlog 2>&1
echo "       -------------------------"       >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $prism = true ]
then
   if [ $test = no ]
   then
      scp prism prism0:prism_buildit
      scp $dist.tar.gz prism0:prism_$dist.tar.gz
      ssh prism0 "chmod 750 prism_buildit;./prism_buildit" &
   fi
fi

#
# Build on yana.
#
rm -f yana
cat <<EOF > yana
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/yana ; then
   mkdir /usr/tmp/$user/yana
fi
rm -rf /usr/tmp/$user/yana/visitbuild
mkdir /usr/tmp/$user/yana/visitbuild
mv yana_$dist.tar.gz /usr/tmp/$user/yana/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/yana/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel --enable-visitmodule >> ../buildlog 2>&1
make -j 6 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux-x86_64.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on yana"         > resultlog 2>&1
echo "       ------------------------"        >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $yana = true ]
then
   if [ $test = no ]
   then
      scp yana yana3:yana_buildit
      scp $dist.tar.gz yana3:yana_$dist.tar.gz
      ssh yana3 "chmod 750 yana_buildit;./yana_buildit" &
   fi
fi

#
# Build on xchem.
#
rm -f xchem
cat <<EOF > xchem
#!/bin/sh
PATH=/usr/X11R6/bin:\$PATH
if test ! -d tmp ; then
   mkdir tmp
fi
if test ! -d tmp/$user ; then
   mkdir tmp/$user
fi
if test ! -d tmp/$user/xchem ; then
   mkdir tmp/$user/xchem
fi
rm -rf tmp/$user/xchem/visitbuild
mkdir tmp/$user/xchem/visitbuild
mv xchem_$dist.tar.gz tmp/$user/xchem/visitbuild/$dist.tar.gz
cd tmp/$user/xchem/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel --enable-visitmodule >> ../buildlog 2>&1
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux-x86_64.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on xchem"        > resultlog 2>&1
echo "       -------------------------"       >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $xchem = true ]
then
   if [ $test = no ]
   then
      scp xchem xchem:xchem_buildit
      scp $dist.tar.gz xchem:xchem_$dist.tar.gz
      ssh xchem "chmod 750 xchem_buildit;./xchem_buildit" &
   fi
fi

#
# Build on davinci.
#
rm -f davinci
cat <<EOF > davinci
#!/bin/sh
if test ! -d tmp ; then
   mkdir tmp
fi
if test ! -d tmp/$user ; then
   mkdir tmp/$user
fi
if test ! -d tmp/$user/davinci; then
   mkdir tmp/$user/davinci
fi
rm -rf tmp/$user/davinci/visitbuild
mkdir tmp/$user/davinci/visitbuild
mv davinci_$dist.tar.gz tmp/$user/davinci/visitbuild/$dist.tar.gz
cd tmp/$user/davinci/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
make -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux-ia64.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on davinci"      > resultlog 2>&1
echo "       ---------------------------"     >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $davinci = true ]
then
   if [ $test = no ]
   then
      scp davinci davinci.nersc.gov:davinci_buildit
      scp $dist.tar.gz davinci.nersc.gov:davinci_$dist.tar.gz
      ssh davinci.nersc.gov "chmod 750 davinci_buildit;./davinci_buildit" &
   fi
fi

#
# Clean up.
#
if [ $test = no ]
then
   rm -f hoth sunspot quad up pengra thunder prism yana xchem davinci
fi
