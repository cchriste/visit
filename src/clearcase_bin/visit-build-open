#!/bin/sh
#-----------------------------------------------------------------------
#
# VISIT-BUILD-OPEN - Build the visit distributions on the open network.
#
# Author: Eric Brugger
# Date:   October 27, 2000
#
# Usage:
#    visit-build-open -d <distribution>
#
#-----------------------------------------------------------------------

test=no

user=`whoami`

#
# Set the user e-mail address.
#
emailName=brugger1@llnl.gov
case $user in
   kbonnell)
      emailName=bonnell2@llnl.gov
      ;; 
   brugger)
      emailName=brugger1@llnl.gov
      ;;
   childs)
      emailName=childs3@llnl.gov
      ;;
   mcmiller)
      emailName=miller86@llnl.gov
      ;;
   miller)
      emailName=miller86@llnl.gov
      ;;
   whitlocb)
      emailName=whitlock2@llnl.gov
      ;;
esac

#
# Parse the execute line, providing default values for error checking.
#
hoth=true
sunspot=true
quad=true
gps=true
berg=true
up=true
pengra=true
pengra_icc=true
thunder=true
vertex=true

dist=undefined

#
# The loop is executed once for each symbol on the execute line.  This means
# that $1 may be blank for later executions of the loop if any "shift 2"
# commands are executed.  The variable abc is not used in the loop.  
#
for abc
do
   case $1 in
      -none)
         hoth=false
         sunspot=false
         quad=false
         gps=false
         berg=false
         up=false
         pengra=false
         pengra_icc=false
         thunder=false
         vertex=false
         shift
         ;;
      -hoth)
         hoth=false
         shift
         ;;
      +hoth)
         hoth=true
         shift
         ;;
      -sunspot)
         sunspot=false
         shift
         ;;
      +sunspot)
         sunspot=true
         shift
         ;;
      -quad)
         quad=false
         shift
         ;;
      +quad)
         quad=true
         shift
         ;;
      -gps)
         gps=false
         shift
         ;;
      +gps)
         gps=true
         shift
         ;;
      -berg)
         berg=false
         shift
         ;;
      +berg)
         berg=true
         shift
         ;;
      -up)
         up=false
         shift
         ;;
      +up)
         up=true
         shift
         ;;
      -pengra)
         pengra=false
         shift
         ;;
      +pengra)
         pengra=true
         shift
         ;;
      -pengra_icc)
         pengra_icc=false
         shift
         ;;
      +pengra_icc)
         pengra_icc=true
         shift
         ;;
      -thunder)
         thunder=false
         shift
         ;;
      +thunder)
         thunder=true
         shift
         ;;
      -vertex)
         vertex=false
         shift
         ;;
      +vertex)
         vertex=true
         shift
         ;;
      -d)
         dist=$2
         shift 2
         ;;
   esac
done

#
# Check that the distribution name was provided.
#
if [ $dist = undefined ]
then
   echo "Usage: [-none] [-<machine name>] -d <distribution>"
   exit
fi

#
# Check that the distribution exists.
#
distfile=$dist.tar.gz
if [ ! -f $distfile ]
then
   echo "Distribution file doesn't exist."
   exit
fi

#
# Build on hoth.
#
rm -f hoth
cat <<EOF > hoth
#!/bin/sh
if test ! -e /scratch/$user ; then
   mkdir /scratch/$user
fi
if test ! -e /scratch/$user/hoth ; then
   mkdir /scratch/$user/hoth
fi
rm -rf /scratch/$user/hoth/visitbuild
mkdir /scratch/$user/hoth/visitbuild
mv hoth_$dist.tar.gz /scratch/$user/hoth/visitbuild/$dist.tar.gz
cd /scratch/$user/hoth/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
cp /lib/libgcc_s.so.1 lib
cp /usr/lib/libstdc++.so.5 lib
make -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on hoth"         > resultlog 2>&1
echo "       ------------------------"        >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $hoth = true ]
then
   if [ $test = no ]
   then
      scp hoth hoth:hoth_buildit
      scp $dist.tar.gz hoth:hoth_$dist.tar.gz
      ssh hoth "chmod 750 hoth_buildit;./hoth_buildit" &
   fi
fi

#
# Build on sunspot.
#
rm -f sunspot
cat <<EOF > sunspot
#!/bin/sh
if test ! -d /export/scratch/$user ; then
   mkdir /export/scratch/$user
fi
if test ! -d /export/scratch/$user/sunspot ; then
   mkdir /export/scratch/$user/sunspot
fi
rm -rf /export/scratch/$user/sunspot/visitbuild
mkdir /export/scratch/$user/sunspot/visitbuild
mv sunspot_$dist.tar.gz /export/scratch/$user/sunspot/visitbuild/$dist.tar.gz
cd /export/scratch/$user/sunspot/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure >> ../buildlog 2>&1
cp /usr/local/lib/libgcc_s.so.1 lib
cp /usr/local/lib/libstdc++.so.5 lib
cd databases/Fluent
sed "s/\\\$(CXXFLAGSORIG)/-D_LARGEFILE64_SOURCE -Wall -Wno-sign-compare -Wno-deprecated/" Makefile > Makefile+;rm Makefile;mv Makefile+ Makefile
cd ../..
make -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.sunos5.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on sunspot"      > resultlog 2>&1
echo "       ---------------------------"     >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $sunspot = true ]
then
   if [ $test = no ]
   then
      scp sunspot sunspot:sunspot_buildit
      scp $dist.tar.gz sunspot:sunspot_$dist.tar.gz
      ssh sunspot "chmod 750 sunspot_buildit;./sunspot_buildit" &
   fi
fi

#
# Build on quad.
#
rm -f quad
cat <<EOF > quad
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/quad ; then
   mkdir /usr/tmp/$user/quad
fi
rm -rf /usr/tmp/$user/quad/visitbuild
mkdir /usr/tmp/$user/quad/visitbuild
mv quad_$dist.tar.gz /usr/tmp/$user/quad/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/quad/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
make >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.irix6.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on quad"         > resultlog 2>&1
echo "       ------------------------"        >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $quad = true ]
then
   if [ $test = no ]
   then
      scp quad quad:quad_buildit
      scp $dist.tar.gz quad:quad_$dist.tar.gz
      ssh quad "chmod 750 quad_buildit;./quad_buildit" &
   fi
fi

#
# Build on gps.
#
rm -f gps
cat <<EOF > gps
#!/bin/sh
if test ! -e /nfs/tmp0/$user ; then
   mkdir /nfs/tmp0/$user
fi
if test ! -e /nfs/tmp0/$user/gps; then
   mkdir /nfs/tmp0/$user/gps
fi
rm -rf /nfs/tmp0/$user/gps/visitbuild
mkdir /nfs/tmp0/$user/gps/visitbuild
mv gps_$dist.tar.gz /nfs/tmp0/$user/gps/visitbuild/$dist.tar.gz
cd /nfs/tmp0/$user/gps/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 MAKE=gmake ./configure --enable-parallel >> ../buildlog 2>&1
cp /usr/local/tools/gnu/gcc/3.3.3_tru64_5/lib/libgcc_s.so.1 lib
cp /usr/local/tools/gnu/gcc/3.3.3_tru64_5/lib/libstdc++.so.5 lib
cd databases/Fluent
sed "s/\\\$(CXXFLAGSORIG)/-isystem \\/usr\\/local\\/include -Wno-deprecated/" Makefile > Makefile+;rm Makefile;mv Makefile+ Makefile
cd ../..
gmake >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -make gmake >> ../buildlog 2>&1
mv visit\$ver2.osf1.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on gps"          > resultlog 2>&1
echo "       -----------------------"         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $gps = true ]
then
   if [ $test = no ]
   then
      scp gps gps15:gps_buildit
      scp $dist.tar.gz gps15:gps_$dist.tar.gz
      ssh gps15 "chmod 750 gps_buildit;./gps_buildit" &
   fi
fi

#
# Build on berg, both serial and parallel versions.
#
rm -f berg
cat <<EOF > berg
#!/bin/sh
if test ! -e /g/g17/$user ; then
   mkdir /g/g17/$user
fi
if test ! -e /g/g17/$user/berg ; then
   mkdir /g/g17/$user/berg
fi
rm -rf /g/g17/$user/berg/visitbuild
mkdir /g/g17/$user/berg/visitbuild
mv berg_$dist.tar.gz /g/g17/$user/berg/visitbuild/$dist.tar.gz
cd /g/g17/$user/berg/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 MAKE=gmake ./configure --enable-parallel >> ../buildlog 2>&1
cp /usr/local/tools/gnu/gcc/3.1_aix_5/lib/libgcc_s.a lib
cp /usr/local/tools/gnu/gcc/3.1_aix_5/lib/libstdc++.a lib
cd databases/Fluent
sed "s/\\\$(CXXFLAGSORIG)/-D_LARGEFILE64_SOURCE -Wall -Wno-sign-compare -Wno-deprecated/" Makefile > Makefile+;rm Makefile;mv Makefile+ Makefile
cd ../..
gmake -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -make gmake >> ../buildlog 2>&1
mv visit\$ver2.aix.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on berg"         > resultlog 2>&1
echo "       ------------------------"        >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $berg = true ]
then
   if [ $test = no ]
   then
      scp berg berg:berg_buildit
      scp $dist.tar.gz berg:berg_$dist.tar.gz
      ssh berg "chmod 750 berg_buildit;./berg_buildit" &
   fi
fi

#
# Build on up, both serial and parallel versions.
#
rm -f up
cat <<EOF > up
#!/bin/sh
PATH=/usr/local/bin:$PATH
if test ! -d /p/gup1/$user ; then
   mkdir /p/gup1/$user
fi
if test ! -d /p/gup1/$user/up ; then
   mkdir /p/gup1/$user/up
fi
rm -rf /p/gup1/$user/up/visitbuild
mkdir /p/gup1/$user/up/visitbuild
mv up_$dist.tar.gz /p/gup1/$user/up/visitbuild/$dist.tar.gz
cd /p/gup1/$user/up/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 MAKE=gmake ./configure --enable-parallel >> ../buildlog 2>&1
gmake -j 4 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -compiler xlc -make gmake >> ../buildlog 2>&1
mv visit\$ver2.aix64-xlc.tar.gz ..
cd ..
echo "        build of visit on up"           > resultlog 2>&1
echo "       ----------------------"          >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $up = true ]
then
   if [ $test = no ]
   then
      scp up up:up_buildit
      scp $dist.tar.gz up:up_$dist.tar.gz
      ssh up "chmod 750 up_buildit;./up_buildit" &
   fi
fi

#
# Build on pengra.
#
rm -f pengra
cat <<EOF > pengra
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/pengra ; then
   mkdir /usr/tmp/$user/pengra
fi
rm -rf /usr/tmp/$user/pengra/visitbuild
mkdir /usr/tmp/$user/pengra/visitbuild
mv pengra_$dist.tar.gz /usr/tmp/$user/pengra/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/pengra/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
cp /lib/libgcc_s.so.1 lib
cp /usr/lib/libstdc++.so.5 lib
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on pengra"       > resultlog 2>&1
echo "       --------------------------"      >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $pengra = true ]
then
   if [ $test = no ]
   then
      scp pengra pengra1:pengra_buildit
      scp $dist.tar.gz pengra1:pengra_$dist.tar.gz
      ssh pengra1 "chmod 750 pengra_buildit;./pengra_buildit" &
   fi
fi

#
# Build an icc version on pengra.
#
rm -f pengra_icc
cat <<EOF > pengra_icc
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/pengra ; then
   mkdir /usr/tmp/$user/pengra
fi
rm -rf /usr/tmp/$user/pengra/visitbuild
mkdir /usr/tmp/$user/pengra/visitbuild
mv pengra_icc_$dist.tar.gz /usr/tmp/$user/pengra/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/pengra/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CC=icc CXX=icpc CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -compiler icc >> ../buildlog 2>&1
mv visit\$ver2.linux-icc.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on pengra_icc"   > resultlog 2>&1
echo "       ------------------------------"  >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $pengra_icc = true ]
then
   if [ $test = no ]
   then
      scp pengra_icc pengra2:pengra_icc_buildit
      scp $dist.tar.gz pengra2:pengra_icc_$dist.tar.gz
      ssh pengra2 "chmod 750 pengra_icc_buildit;./pengra_icc_buildit" &
   fi
fi

#
# Build on thunder.
#
rm -f thunder
cat <<EOF > thunder
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/thunder ; then
   mkdir /usr/tmp/$user/thunder
fi
rm -rf /usr/tmp/$user/thunder/visitbuild
mkdir /usr/tmp/$user/thunder/visitbuild
mv thunder_$dist.tar.gz /usr/tmp/$user/thunder/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/thunder/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
cp /lib/libgcc_s.so.1 lib
cp /usr/lib/libstdc++.so.5 lib
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux-ia64.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on thunder"      > resultlog 2>&1
echo "       ---------------------------"     >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $thunder = true ]
then
   if [ $test = no ]
   then
      scp thunder thunder2:thunder_buildit
      scp $dist.tar.gz thunder2:thunder_$dist.tar.gz
      ssh thunder2 "chmod 750 thunder_buildit;./thunder_buildit" &
   fi
fi

#
# Build on vertex.
#
rm -f vertex
cat <<EOF > vertex
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/vertex ; then
   mkdir /usr/tmp/$user/vertex
fi
rm -rf /usr/tmp/$user/vertex/visitbuild
mkdir /usr/tmp/$user/vertex/visitbuild
mv vertex_$dist.tar.gz /usr/tmp/$user/vertex/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/vertex/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
ver=\`cat VERSION\`
ver2=\`echo \$ver | tr "." "_"\`
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
cp /usr/local/tools/gnu/gcc/3.4.4_RH_chaos_3_x86_64/usr/lib64/libgcc_s.so.1 lib
cp /usr/local/tools/gnu/gcc/3.4.4_RH_chaos_3_x86_64/usr/lib64/libstdc++.so.6 lib
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist >> ../buildlog 2>&1
mv visit\$ver2.linux-x86_64.tar.gz ..
cd ..
rm -f resultlog
echo "        build of visit on vertex"       > resultlog 2>&1
echo "       --------------------------"      >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
ls -l                                         >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "number of database plugins = "\`ls $dist/plugins/databases/libI* | wc -l\` >> resultlog 2>&1
echo "number of operator plugins = "\`ls $dist/plugins/operators/libI* | wc -l\` >> resultlog 2>&1
echo "number of plot plugins = "\`ls $dist/plugins/plots/libI* | wc -l\` >> resultlog 2>&1
echo ""                                       >> resultlog 2>&1
echo "The database plugins:"                  >> resultlog 2>&1
ls $dist/plugins/databases/libI* | sed "s/$dist\/plugins\/databases\/libI//" | sed "s/Database.so//" >> resultlog 2>&1
mail $emailName < resultlog
EOF

if [ $vertex = true ]
then
   if [ $test = no ]
   then
      scp vertex vertex0:vertex_buildit
      scp $dist.tar.gz vertex0:vertex_$dist.tar.gz
      ssh vertex0 "chmod 750 vertex_buildit;./vertex_buildit" &
   fi
fi

#
# Clean up.
#
if [ $test = no ]
then
   rm -f hoth sunspot quad gps berg up pengra pengra_icc thunder vertex
fi
