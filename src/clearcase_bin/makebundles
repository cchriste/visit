#!/bin/csh -f
###############################################################################
# Purpose:
#    This script creates bundle directories, which are required for VisIt to
#    run correctly on MacOS X. Without bundles, VisIt can't respond to mouse
#    input.
#
# Programmer: Brad Whitlock
# Date:       Fri Aug 29 13:46:10 PST 2003
#
###############################################################################

set VISITTOP = `pwd`
set VISITBIN = "$VISITTOP/bin"
set VISITLIB = "$VISITTOP/lib"
set VISITINCLUDE = "$VISITTOP/include"

if -e $VISITBIN then
    # This is kind of a hack, but create the top level Frameworks directory
    # because the visit script needs it to run xml2makefile without having
    # to set the DYLD_LIBRARY_PATH beforehand. Without this step, configure
    # fails when trying to create plugin Makefiles.
    if -e Frameworks then
        rm -rf Frameworks
    endif
    mkdir Frameworks
    cp lib/libqt.dylib Frameworks/libqt.3.dylib
    
    # Get the version and cd into the bin directory.
    set VERSION = `cat VERSION`
    cd $VISITBIN

    ##
    ## Create the GUI bundle.
    ##
    if -e gui.app then
        rm -f gui.app/Contents/{bin,lib}
        rm -rf gui.app
    endif
    mkdir gui.app
    mkdir gui.app/Contents
    mkdir gui.app/Contents/MacOS
    ln -s $VISITBIN gui.app/Contents/bin
    ln -s $VISITLIB gui.app/Contents/lib
    ln -s $VISITBIN/gui gui.app/Contents/MacOS/gui
    ln -s $VISITBIN/visit gui.app/Contents/MacOS/visit
    sed "s/PROGRAMNAME/VisIt/g" $VISITINCLUDE/Info.plist | sed "s/VERSION/$VERSION/g" > gui.app/Contents/Info.plist
    echo "APPL????" > gui.app/Contents/PkgInfo

    ##
    ## Create the viewer bundle.
    ##
    if -e viewer.app then
        rm -f viewer.app/Contents/{bin,lib}
        rm -rf viewer.app
    endif
    mkdir viewer.app
    mkdir viewer.app/Contents
    mkdir viewer.app/Contents/MacOS
    ln -s $VISITBIN viewer.app/Contents/bin
    ln -s $VISITLIB viewer.app/Contents/lib
    ln -s $VISITBIN/viewer viewer.app/Contents/MacOS/viewer
    ln -s $VISITBIN/visit viewer.app/Contents/MacOS/visit
    sed "s/PROGRAMNAME/VisIt Viewer/g" $VISITINCLUDE/Info.plist | sed "s/VERSION/$VERSION/g" > viewer.app/Contents/Info.plist
    echo "APPL????" > viewer.app/Contents/PkgInfo


    ##
    ## Create the silex bundle.
    ##
    if -e silex.app then
        rm -f silex.app/Contents/{bin,lib}
        rm -rf silex.app
    endif
    mkdir silex.app
    mkdir silex.app/Contents
    mkdir silex.app/Contents/MacOS
    ln -s $VISITBIN silex.app/Contents/bin
    ln -s $VISITLIB silex.app/Contents/lib
    ln -s $VISITBIN/silex silex.app/Contents/MacOS/silex
    ln -s $VISITBIN/visit silex.app/Contents/MacOS/visit
    sed "s/PROGRAMNAME/Silex/g" $VISITINCLUDE/Info.plist | sed "s/VERSION/$VERSION/g" > silex.app/Contents/Info.plist
    echo "APPL????" > silex.app/Contents/PkgInfo

    ##
    ## Create the xmledit bundle.
    ##
    if -e xmledit.app then
        rm -f xmledit.app/Contents/{bin,lib}
        rm -rf xmledit.app
    endif
    mkdir xmledit.app
    mkdir xmledit.app/Contents
    mkdir xmledit.app/Contents/MacOS
    ln -s $VISITBIN xmledit.app/Contents/bin
    ln -s $VISITLIB xmledit.app/Contents/lib
    ln -s $VISITBIN/xmledit xmledit.app/Contents/MacOS/xmledit
    ln -s $VISITBIN/visit xmledit.app/Contents/MacOS/visit
    sed "s/PROGRAMNAME/XMLEdit/g" $VISITINCLUDE/Info.plist | sed "s/VERSION/$VERSION/g" > xmledit.app/Contents/Info.plist
    echo "APPL????" > xmledit.app/Contents/PkgInfo
else
    @echo "The makebundles script must be run from the top level VisIt directory."
endif
