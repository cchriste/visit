#!/bin/sh
#-----------------------------------------------------------------------
#
# VISIT-BUILD-CLOSED - Build the visit distributions on the closed
#                      network.
#
# Author: Eric Brugger
# Date:   February 12, 2001
#
# Usage:
#    visit-build-closed -v <version> -d <distribution>
#
#-----------------------------------------------------------------------

test=no

user=`whoami`

#
# Parse the execute line, providing default values for error checking.
#
warp=false
sc=true
tidalwave=true
white=true
emperor=true

ver=undefined
dist=undefined

#
# The loop is executed once for each symbol on the execute line.  This means
# that $1 may be blank for later executions of the loop if any "shift 2"
# commands are executed.  The variable abc is not used in the loop.  
#
for abc
do
   case $1 in
      -none)
         warp=false
         sc=false
         tidalwave=false
         white=false
         emperor=false
         shift
         ;;
      -warp)
         warp=false
         shift
         ;;
      +warp)
         warp=true
         shift
         ;;
      -sc)
         sc=false
         shift
         ;;
      +sc)
         sc=true
         shift
         ;;
      -tidalwave)
         tidalwave=false
         shift
         ;;
      +tidalwave)
         tidalwave=true
         shift
         ;;
      -white)
         white=false
         shift
         ;;
      +white)
         white=true
         shift
         ;;
      -emperor)
         emperor=false
         shift
         ;;
      +emperor)
         emperor=true
         shift
         ;;
      -v)
         ver=$2
         shift 2
         ;;
      -d)
         dist=$2
         shift 2
         ;;
   esac
done

#
# Check that both the version and distribution name were provided.
#
if [ $ver = undefined ]
then
   echo "Usage: [-none] [-<machine name>] -v <version> -d <distribution>"
   exit
fi
if [ $dist = undefined ]
then
   echo "Usage: [-none] [-<machine name>] -v <version> -d <distribution>"
   exit
fi

#
# Check that the distribution exists.
#
distfile=$dist.tar.gz
if [ ! -f $distfile ]
then
   echo "Distribution file doesn't exist."
   exit
fi

ver2=`echo $ver | tr "." "_"`

#
# Build on warp.
#
rm -f warp
cat <<EOF > warp
#!/bin/sh
if test ! -d /scratch/$user ; then
   mkdir /scratch/$user
fi
if test ! -d /scratch/$user/warp ; then
   mkdir /scratch/$user/warp
fi
rm -rf /scratch/$user/warp/visitbuild
mkdir /scratch/$user/warp/visitbuild
mv warp_$dist.tar.gz /scratch/$user/warp/visitbuild/$dist.tar.gz
cd /scratch/$user/warp/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
env CXXFLAGS=-O2 ./configure >> ../buildlog 2>&1
env PARALLEL=4 make -P >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -v $ver >> ../buildlog 2>&1
mv visit$ver2.irix6.tar.gz ..
cp clearcase_bin/visit-install ..
cd ..
./visit-install $ver irix6 visit >> buildlog 2>&1
EOF

if [ $warp = true ]
then
   if [ $test = no ]
   then
      scp -P 22 warp warp:warp_buildit
      scp -P 22 $dist.tar.gz warp:warp_$dist.tar.gz
      ssh -p 22 warp "chmod 750 warp_buildit;./warp_buildit &"
   fi
fi

#
# Build on sc.
#
rm -f sc
cat <<EOF > sc
#!/bin/sh
if test ! -d /nfs/tmp2/$user ; then
   mkdir /nfs/tmp2/$user
fi
if test ! -d /nfs/tmp2/$user/sc ; then
   mkdir /nfs/tmp2/$user/sc
fi
rm -rf /nfs/tmp2/$user/sc/visitbuild
mkdir /nfs/tmp2/$user/sc/visitbuild
mv sc_$dist.tar.gz /nfs/tmp2/$user/sc/visitbuild/$dist.tar.gz
cd /nfs/tmp2/$user/sc/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
make >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -v $ver >> ../buildlog 2>&1
mv visit$ver2.osf1.tar.gz ..
cp clearcase_bin/visit-install ..
cd ..
./visit-install $ver osf1 visit >> buildlog 2>&1
EOF

if [ $sc = true ]
then
   if [ $test = no ]
   then
      scp -P 22 sc sc1:sc_buildit
      scp -P 22 $dist.tar.gz sc1:sc_$dist.tar.gz
      ssh -p 22 sc1 "chmod 750 sc_buildit;./sc_buildit" &
   fi
fi

#
# Build on tidalwave, both serial and parallel versions.
#
rm -f tidalwave
cat <<EOF > tidalwave
#!/bin/sh
if test ! -d /fc/san3/$user ; then
   mkdir /fc/san3/$user
fi
if test ! -d /fc/san3/$user/tidalwave ; then
   mkdir /fc/san3/$user/tidalwave
fi
rm -rf /fc/san3/$user/tidalwave/visitbuild
mkdir /fc/san3/$user/tidalwave/visitbuild
mv tidalwave_$dist.tar.gz /fc/san3/$user/tidalwave/visitbuild/$dist.tar.gz
cd /fc/san3/$user/tidalwave/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
env CXXFLAGS=-O2 ./configure --enable-parallel >> ../buildlog 2>&1
env PARALLEL=20 make -P >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -v $ver >> ../buildlog 2>&1
mv visit$ver2.irix6.tar.gz ..
cp clearcase_bin/visit-install ..
cd ..
./visit-install $ver irix6 visit >> buildlog 2>&1
EOF

if [ $tidalwave = true ]
then
   if [ $test = no ]
   then
      scp tidalwave tidalwave:tidalwave_buildit
      scp $dist.tar.gz tidalwave:tidalwave_$dist.tar.gz
      ssh tidalwave "chmod 750 tidalwave_buildit;./tidalwave_buildit &"
   fi
fi

#
# Build on white, both serial and parallel versions.
#
rm -f white
cat <<EOF > white
#!/bin/sh
PATH=/usr/local/bin:$PATH
if test ! -d /p/gw1/$user ; then
   mkdir /p/gw1/$user
fi
if test ! -d /p/gw1/$user/white ; then
   mkdir /p/gw1/$user/white
fi
rm -rf /p/gw1/$user/white/visitbuild
mkdir /p/gw1/$user/white/visitbuild
mv white_$dist.tar.gz /p/gw1/$user/white/visitbuild/$dist.tar.gz
cd /p/gw1/$user/white/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
env CXXFLAGS=-O2 MAKE=gmake ./configure --enable-parallel >> ../buildlog 2>&1
gmake -j 6 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -v $ver >> ../buildlog 2>&1
mv visit$ver2.aix.tar.gz ..
cp clearcase_bin/visit-install ..
cd ..
./visit-install $ver aix visit >> buildlog 2>&1
EOF

if [ $white = true ]
then
   if [ $test = no ]
   then
      scp white white:white_buildit
      scp $dist.tar.gz white:white_$dist.tar.gz
      ssh white "chmod 750 white_buildit;./white_buildit" &
   fi
fi

#
# Build on emperor, both serial and parallel versions.
#
rm -f emperor
cat <<EOF > emperor
#!/bin/sh
if test ! -d /usr/tmp/$user ; then
   mkdir /usr/tmp/$user
fi
if test ! -d /usr/tmp/$user/emperor ; then
   mkdir /usr/tmp/$user/emperor
fi
rm -rf /usr/tmp/$user/emperor/visitbuild
mkdir /usr/tmp/$user/emperor/visitbuild
mv emperor_$dist.tar.gz /usr/tmp/$user/emperor/visitbuild/$dist.tar.gz
cd /usr/tmp/$user/emperor/visitbuild
gunzip -c $dist.tar.gz | tar xvf - > buildlog 2>&1
cd $dist
./configure --enable-parallel >> ../buildlog 2>&1
make -j 3 >> ../buildlog 2>&1
clearcase_bin/visit-bin-dist -v $ver >> ../buildlog 2>&1
mv visit$ver2.linux.tar.gz ..
cp clearcase_bin/visit-install ..
cd ..
./visit-install $ver linux visit >> buildlog 2>&1
EOF

if [ $emperor = true ]
then
   if [ $test = no ]
   then
      scp emperor emperor0:emperor_buildit
      scp $dist.tar.gz emperor0:emperor_$dist.tar.gz
      ssh emperor0 "chmod 750 emperor_buildit;./emperor_buildit &"
   fi
fi

#
# Clean up.
#
if [ $test = no ]
then
   rm -f warp sc tidalwave white emperor
fi
